{"version":3,"file":"plex.js","sources":["../../../../bower_components/almond/almond.js","plex/core/utils.js","plex/core/headers.js","plex/core/interface_registry.js","plex/cloud/interfaces/registry.js","plex/cloud/interfaces/api/home/root.js","plex/cloud/interfaces/api/home/users.js","plex/cloud/interfaces/api/invites.js","plex/cloud/interfaces/api/root.js","plex/cloud/interfaces/pms/main.js","plex/cloud/interfaces/pms/playlists.js","plex/cloud/interfaces/pms/social.js","plex/cloud/interfaces/devices.js","plex/cloud/interfaces/main.js","plex/cloud/interfaces/pins.js","plex/cloud/interfaces/root.js","plex/cloud/interfaces/users.js","plex/cloud/main.js","plex/server/interfaces/registry.js","plex/server/interfaces/root.js","plex/server/main.js","plex/main.js","plex.js"],"names":["this","httpinvoke","UAParser","when","requirejs","require","define","undef","hasProp","obj","prop","hasOwn","call","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","lastIndex","foundI","foundStarMap","starI","i","j","part","baseParts","split","map","config","starMap","charAt","slice","length","nodeIdCompat","jsSuffixRegExp","test","replace","concat","splice","join","indexOf","substring","makeRequire","relName","forceSync","req","apply","aps","arguments","makeNormalize","makeLoad","depName","value","defined","callDep","waiting","args","defining","main","Error","splitPrefix","prefix","index","makeConfig","makeMap","handlers","Object","prototype","hasOwnProperty","plugin","parts","f","n","pr","p","exports","e","module","id","uri","deps","callback","cjsModule","ret","usingExports","callbackType","load","undefined","alt","setTimeout","cfg","_defined","amd","jQuery","utils","random","string","chars","isDefined","result","Math","round","url","query","encode","parameters","components","key","push","encodeURIComponent","path","clone","temp","constructor","buildDefaultHeaders","parser","browser","getBrowser","os","getOS","X-Plex-Device","X-Plex-Device-Name","X-Plex-Platform","X-Plex-Platform-Version","version","substr","X-Plex-Product","X-Plex-Version","Headers","current","get","headers","update","reset","setDevice","device","setPlatform","setProduct","InterfaceRegistry","interfaces","set","cls","__path__","console","debug","expose","target","exposeRoot","method","registry","Root","$c","$r","outputType","request","users","Users","pin","Invites","requested","requests","home","resources","includeHttps","Main","ip","Playlists","all","playlist","unwatched","deleteItem","Social","networks","Devices","scrobble","identifier","unscrobble","Pins","devices","pins","account","login","username","password","Authorization","btoa","Cloud","baseUrl","client_identifier","token","deferred","defer","converters","xml text","serializer","XMLSerializer","serializeToString","text xml","DOMParser","parseFromString","then","response","statusCode","resolve","body","reject","statusText","promise","details","identity","Server","cloud","plex","log"],"mappings":"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,GAAAzB,MAGAtL,EAAA,QCVA,aACA,SAAAgN,GAGA,MAFArE,SAAAsE,IAAA,oBAEAD,IAEAhN,EAAA,aAAA;;;;;;;;AtxanEA,ADoEA;ACnEA;AACA;AACA;AACA;ACJA,ADKA;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA,ADuBA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjnEA,ADoEA;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA,ADWA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/**\n * @license almond 0.2.9 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                //Convert baseName to array, and lop off the last part,\n                //so that . matches that \"directory\" and not name of the baseName's\n                //module. For instance, baseName of \"one/two/three\", maps to\n                //\"one/two/three.js\", but we want the directory, \"one/two\" for\n                //this normalization.\n                baseParts = baseParts.slice(0, baseParts.length - 1);\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                name = baseParts.concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            return req.apply(undef, aps.call(arguments, 0).concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"../../../../bower_components/almond/almond.js\", function(){});\n\n","define('plex/core/utils',[], function() {\r\n    var utils = {\r\n        random: {\r\n            string: function(length, chars) {\r\n                // Set parameter defaults\r\n                length = utils.isDefined(length) ? length : 16;\r\n                chars = utils.isDefined(chars) ? chars : '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n\r\n                // Generate string\r\n                var result = '';\r\n\r\n                for (var i = length; i > 0; --i) {\r\n                    result += chars[Math.round(Math.random() * (chars.length - 1))];\r\n                }\r\n\r\n                return result;\r\n            }\r\n        },\r\n\r\n        url: {\r\n            query: {\r\n                encode: function(parameters) {\r\n                    // Check if the `parameters` are valid\r\n                    if(!utils.isDefined(parameters)) {\r\n                        return '';\r\n                    }\r\n\r\n                    // Build query string\r\n                    var components = [];\r\n\r\n                    for(var key in parameters) {\r\n                        if(!parameters.hasOwnProperty(key)) {\r\n                            continue;\r\n                        }\r\n\r\n                        components.push(encodeURIComponent(key) + '=' + encodeURIComponent(parameters[key]));\r\n                    }\r\n\r\n                    return components.join('&');\r\n                }\r\n            },\r\n\r\n            encode: function(path, parameters) {\r\n                var query = utils.url.query.encode(parameters);\r\n\r\n                if(query.length === 0) {\r\n                    // No parameters provided\r\n                    return path;\r\n                }\r\n\r\n                return path + '?' + query;\r\n            }\r\n        },\r\n\r\n        clone: function(obj) {\r\n            if (obj === null || typeof obj !== 'object') {\r\n                return obj;\r\n            }\r\n\r\n            var temp = obj.constructor();\r\n\r\n            for (var key in obj) {\r\n                if(!obj.hasOwnProperty(key)) {\r\n                    continue;\r\n                }\r\n\r\n                temp[key] = utils.clone(obj[key]);\r\n            }\r\n\r\n            return temp;\r\n        },\r\n\r\n        isDefined: function(value) {\r\n            return !!(typeof value !== 'undefined' && value !== null);\r\n        }\r\n    };\r\n\r\n    return utils;\r\n});\n","define('plex/core/headers',[\r\n    'plex/core/utils',\r\n    'ua-parser'\r\n], function(utils, UAParser) {\r\n    function buildDefaultHeaders() {\r\n        var parser = new UAParser(),\r\n            browser = parser.getBrowser(),\r\n            os = parser.getOS();\r\n\r\n        return {\r\n            'X-Plex-Device': os.name,\r\n            'X-Plex-Device-Name': null,\r\n\r\n            'X-Plex-Platform': browser.name,\r\n            'X-Plex-Platform-Version': browser.version.substr(0, browser.version.indexOf('.', 3)),\r\n\r\n            'X-Plex-Product': 'plex.js',\r\n            'X-Plex-Version': '1.0.0'\r\n        };\r\n    }\r\n\r\n    function Headers() {\r\n        this.default = buildDefaultHeaders();\r\n        this.current = utils.clone(this.default);\r\n    }\r\n\r\n    Headers.prototype.get = function(headers) {\r\n        headers = typeof headers !== 'undefined' ? headers : {};\r\n\r\n        // Merge headers\r\n        var result = utils.clone(this.current);\r\n\r\n        if(result['X-Plex-Device-Name'] === null) {\r\n            // Automatically generate device name\r\n            if(result['X-Plex-Product'] !== null && result['X-Plex-Platform'] !== null) {\r\n                result['X-Plex-Device-Name'] = result['X-Plex-Product'] + ' (' + result['X-Plex-Platform'] + ')';\r\n            } else if(result['X-Plex-Product'] !== null) {\r\n                result['X-Plex-Device-Name'] = result['X-Plex-Product'];\r\n            } else {\r\n                result['X-Plex-Device-Name'] = 'plex.js';\r\n            }\r\n        }\r\n\r\n        for(var key in headers) {\r\n            if(!headers.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n\r\n            result[key] = headers[key];\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    Headers.prototype.update = function(headers) {\r\n        for(var key in headers) {\r\n            if(!headers.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n\r\n            this.current[key] = headers[key];\r\n        }\r\n    };\r\n\r\n    Headers.prototype.reset = function() {\r\n        this.current = utils.clone(this.default);\r\n    };\r\n\r\n    Headers.prototype.setDevice = function(name, device) {\r\n        this.update({\r\n            'X-Plex-Device': device,\r\n            'X-Plex-Device-Name': name\r\n        });\r\n    };\r\n\r\n    Headers.prototype.setPlatform = function(name, version) {\r\n        this.update({\r\n            'X-Plex-Platform': name,\r\n            'X-Plex-Platform-Version': version\r\n        });\r\n    };\r\n\r\n    Headers.prototype.setProduct = function(name, version) {\r\n        this.update({\r\n            'X-Plex-Product': name,\r\n            'X-Plex-Version': version\r\n        });\r\n    };\r\n\r\n    return Headers;\r\n});\n","define('plex/core/interface_registry',[\n    'plex/core/utils'\n], function(utils) {\n    function InterfaceRegistry() {\n        this.interfaces = {};\n    }\n\n    InterfaceRegistry.prototype.set = function(cls) {\n        var path = cls.__path__;\n\n        if(typeof path === 'undefined' || path === null) {\n            throw new Error('Interface is missing a \"__path__\" attribute', cls);\n        }\n\n        if(utils.isDefined(this.interfaces[path])) {\n            throw new Error('Interface \"' + path + '\" already registered');\n        }\n\n        // Register interface\n        this.interfaces[path] = cls;\n\n        console.debug('Registered interface \"%s\"', path);\n    };\n\n    InterfaceRegistry.prototype.expose = function(target) {\n        for(var key in this.interfaces) {\n            if(!this.interfaces.hasOwnProperty(key)) {\n                continue;\n            }\n\n            target[key] = new this.interfaces[key](target);\n\n            console.debug('Exposed interface \"%s\"', key);\n        }\n    };\n\n    InterfaceRegistry.prototype.exposeRoot = function(target) {\n        var cls = target[''];\n\n        if(!utils.isDefined(cls)) {\n            return;\n        }\n\n        // Apply root method proxies to `target`\n        for(var key in cls) {\n            // Ignore class attributes, and attributes starting with '$'\n            if(key.indexOf('$') === 0 || cls.hasOwnProperty(key)) {\n                continue;\n            }\n\n            // Ensure `target` proxy doesn't already exist\n            if(utils.isDefined(target[key])) {\n                throw new Error('Method proxy \"' + key + '\" already exists');\n            }\n\n            // Create method proxy\n            target[key] = (function(method) {\n                return function() {\n                    return method.apply(cls, arguments);\n                };\n            })(cls[key]);\n\n            console.debug('Exposed root method \"%s\"', key);\n        }\n    };\n\n    return InterfaceRegistry;\n});\n","define('plex/cloud/interfaces/registry',[\r\n    'plex/core/interface_registry'\r\n], function(InterfaceRegistry) {\r\n    return new InterfaceRegistry();\r\n});\n","define('plex/cloud/interfaces/api/home/root',[\r\n    'plex/cloud/interfaces/registry'\r\n], function(registry) {\r\n    function Root($c) {\r\n        this.$c = $c;\r\n    }\r\n\r\n    Root.prototype.$r = function(method, path, config) {\r\n        config = typeof config !== 'undefined' ? config : {};\r\n        config.outputType = 'xml';\r\n\r\n        return this.$c.request(method, Root.__path__ + '/' + path, config);\r\n    };\r\n\r\n    Root.prototype.users = function() {\r\n        return this.$r('GET', 'users');\r\n    };\r\n\r\n    // Register interface\r\n    Root.__path__ = '/api/home';\r\n\r\n    registry.set(Root);\r\n});\n","define('plex/cloud/interfaces/api/home/users',[\r\n    'plex/cloud/interfaces/registry',\r\n    'plex/core/utils'\r\n], function(registry, utils) {\r\n    function Users($c) {\r\n        this.$c = $c;\r\n    }\r\n\r\n    Users.prototype.$r = function(method, path, config) {\r\n        config = typeof config !== 'undefined' ? config : {};\r\n        config.outputType = 'xml';\r\n\r\n        return this.$c.request(method, Users.__path__ + '/' + path, config);\r\n    };\r\n\r\n    Users.prototype.switch = function(id, pin) {\r\n        if(!utils.isDefined(id)) {\r\n            throw new Error();\r\n        }\r\n\r\n        // Build query\r\n        var parameters = {};\r\n\r\n        if(utils.isDefined(pin)) {\r\n            parameters['pin'] = pin;\r\n        }\r\n\r\n        // Send request\r\n        return this.$r('POST', utils.url.encode(id + '/switch', parameters));\r\n    };\r\n\r\n    // Register interface\r\n    Users.__path__ = '/api/home/users';\r\n\r\n    registry.set(Users);\r\n});\n","define('plex/cloud/interfaces/api/invites',[\r\n    'plex/cloud/interfaces/registry'\r\n], function(registry) {\r\n    function Invites($c) {\r\n        this.$c = $c;\r\n    }\r\n\r\n    Invites.prototype.$r = function(method, path, config) {\r\n        config = typeof config !== 'undefined' ? config : {};\r\n        config.outputType = 'xml';\r\n\r\n        return this.$c.request(method, Invites.__path__ + '/' + path, config);\r\n    };\r\n\r\n    Invites.prototype.requested = function() {\r\n        return this.$r('GET', 'requested');\r\n    };\r\n\r\n    Invites.prototype.requests = function() {\r\n        return this.$r('GET', 'requests');\r\n    };\r\n\r\n    // Register interface\r\n    Invites.__path__ = '/api/invites';\r\n\r\n    registry.set(Invites);\r\n});\n","define('plex/cloud/interfaces/api/root',[\r\n    'plex/cloud/interfaces/registry',\r\n    'plex/core/utils'\r\n], function(registry, utils) {\r\n    function Root($c) {\r\n        this.$c = $c;\r\n    }\r\n\r\n    Root.prototype.$r = function(method, path, config) {\r\n        config = typeof config !== 'undefined' ? config : {};\r\n        config.outputType = 'xml';\r\n\r\n        return this.$c.request(method, Root.__path__ + '/' + path, config);\r\n    };\r\n\r\n    Root.prototype.home = function() {\r\n        return this.$r('GET', 'home');\r\n    };\r\n\r\n    Root.prototype.resources = function(includeHttps) {\r\n        // Build query\r\n        var parameters = {};\r\n\r\n        if(utils.isDefined(includeHttps)) {\r\n            // Convert boolean to integer\r\n            if(typeof includeHttps === 'boolean') {\r\n                includeHttps = includeHttps ? 1 : 0;\r\n            }\r\n\r\n            parameters['includeHttps'] = includeHttps;\r\n        }\r\n\r\n        // Send request\r\n        return this.$r('GET', utils.url.encode('resources', parameters));\r\n    };\r\n\r\n    Root.prototype.users = function() {\r\n        return this.$r('GET', 'users');\r\n    };\r\n\r\n    // Register interface\r\n    Root.__path__ = '/api';\r\n\r\n    registry.set(Root);\r\n});\n","define('plex/cloud/interfaces/pms/main',[\r\n    'plex/cloud/interfaces/registry'\r\n], function(registry) {\r\n    function Main($c) {\r\n        this.$c = $c;\r\n    }\r\n\r\n    Main.prototype.$r = function(method, path, config) {\r\n        return this.$c.request(method, Main.__path__ + '/' + path, config);\r\n    };\r\n\r\n    Main.prototype.ip = function() {\r\n        return this.$r('GET', 'ip');\r\n    };\r\n\r\n    // Register interface\r\n    Main.__path__ = '/pms/:';\r\n\r\n    registry.set(Main);\r\n});\n","define('plex/cloud/interfaces/pms/playlists',[\r\n    'plex/cloud/interfaces/registry'\r\n], function(registry) {\r\n    function Playlists($c) {\r\n        this.$c = $c;\r\n    }\r\n\r\n    Playlists.prototype.$r = function(method, path, config) {\r\n        config = typeof config !== 'undefined' ? config : {};\r\n        config.outputType = 'xml';\r\n\r\n        return this.$c.request(method, Playlists.__path__ + '/' + path, config);\r\n    };\r\n\r\n    Playlists.prototype.all = function(playlist) {\r\n        return this.$r('GET', playlist + '/all');\r\n    };\r\n\r\n    Playlists.prototype.unwatched = function(playlist) {\r\n        return this.$r('GET', playlist + '/unwatched');\r\n    };\r\n\r\n    // Items\r\n    Playlists.prototype.deleteItem = function(playlist, id) {\r\n        return this.$r('DELETE', playlist + '/items/' + id);\r\n    };\r\n\r\n    // Register interface\r\n    Playlists.__path__ = '/pms/playlists';\r\n\r\n    registry.set(Playlists);\r\n});\n","define('plex/cloud/interfaces/pms/social',[\r\n    'plex/cloud/interfaces/registry'\r\n], function(registry) {\r\n    function Social($c) {\r\n        this.$c = $c;\r\n    }\r\n\r\n    Social.prototype.$r = function(method, path, config) {\r\n        config = typeof config !== 'undefined' ? config : {};\r\n        config.outputType = 'xml';\r\n\r\n        return this.$c.request(method, Social.__path__ + '/' + path, config);\r\n    };\r\n\r\n    Social.prototype.networks = function() {\r\n        return this.$r('GET', 'networks');\r\n    };\r\n\r\n    // Register interface\r\n    Social.__path__ = '/pms/social';\r\n\r\n    registry.set(Social);\r\n});\n","define('plex/cloud/interfaces/devices',[\r\n    'plex/cloud/interfaces/registry'\r\n], function(registry) {\r\n    function Devices($c) {\r\n        this.$c = $c;\r\n    }\r\n\r\n    Devices.prototype.$r = function(method, path, config) {\r\n        config = typeof config !== 'undefined' ? config : {};\r\n        config.outputType = 'xml';\r\n\r\n        return this.$c.request(method, Devices.__path__ + '/' + path, config);\r\n    };\r\n\r\n    Devices.prototype.delete = function(id) {\r\n        return this.$r('DELETE', id + '.xml');\r\n    };\r\n\r\n    // Register interface\r\n    Devices.__path__ = '/devices';\r\n\r\n    registry.set(Devices);\r\n});\n","define('plex/cloud/interfaces/main',[\r\n    'plex/cloud/interfaces/registry',\r\n    'plex/core/utils'\r\n], function(registry, utils) {\r\n    function Main($c) {\r\n        this.$c = $c;\r\n    }\r\n\r\n    Main.prototype.$r = function(method, path, config) {\r\n        config = typeof config !== 'undefined' ? config : {};\r\n        config.outputType = 'xml';\r\n\r\n        return this.$c.request(method, Main.__path__ + '/' + path, config);\r\n    };\r\n\r\n    Main.prototype.scrobble = function(key, identifier) {\r\n        if(!utils.isDefined(key) || !utils.isDefined(identifier)) {\r\n            throw new Error();\r\n        }\r\n\r\n        return this.$r('GET', utils.url.encode('scrobble', {\r\n            key: key,\r\n            identifier: identifier\r\n        }));\r\n    };\r\n\r\n    Main.prototype.unscrobble = function(key, identifier) {\r\n        if(!utils.isDefined(key) || !utils.isDefined(identifier)) {\r\n            throw new Error();\r\n        }\r\n\r\n        return this.$r('GET', utils.url.encode('unscrobble', {\r\n            key: key,\r\n            identifier: identifier\r\n        }));\r\n    };\r\n\r\n    // Register interface\r\n    Main.__path__ = '/:';\r\n\r\n    registry.set(Main);\r\n});\n","define('plex/cloud/interfaces/pins',[\r\n    'plex/cloud/interfaces/registry'\r\n], function(registry) {\r\n    function Pins($c) {\r\n        this.$c = $c;\r\n    }\r\n\r\n    Pins.prototype.$r = function(method, path, config) {\r\n        config = typeof config !== 'undefined' ? config : {};\r\n        config.outputType = 'xml';\r\n\r\n        return this.$c.request(method, Pins.__path__ + '/' + path, config);\r\n    };\r\n\r\n    Pins.prototype.get = function(id) {\r\n        return this.$r('GET', id + '.xml');\r\n    };\r\n\r\n    // Register interface\r\n    Pins.__path__ = '/pins';\r\n\r\n    registry.set(Pins);\r\n});\n","define('plex/cloud/interfaces/root',[\r\n    'plex/cloud/interfaces/registry'\r\n], function(registry) {\r\n    function Root($c) {\r\n        this.$c = $c;\r\n    }\r\n\r\n    Root.prototype.$r = function(method, path, config) {\r\n        config = typeof config !== 'undefined' ? config : {};\r\n        config.outputType = 'xml';\r\n\r\n        return this.$c.request(method, Root.__path__ + '/' + path, config);\r\n    };\r\n\r\n    Root.prototype.devices = function() {\r\n        return this.$r('GET', 'devices.xml');\r\n    };\r\n\r\n    Root.prototype.pins = function() {\r\n        return this.$r('POST', 'pins.xml');\r\n    };\r\n\r\n    // Register interface\r\n    Root.__path__ = '';\r\n\r\n    registry.set(Root);\r\n});\n","define('plex/cloud/interfaces/users',[\r\n    'plex/cloud/interfaces/registry',\r\n    'plex/core/utils'\r\n], function(registry, utils) {\r\n    function Users($c) {\r\n        this.$c = $c;\r\n    }\r\n\r\n    Users.prototype.$r = function(method, path, config) {\r\n        config = typeof config !== 'undefined' ? config : {};\r\n        config.outputType = 'xml';\r\n\r\n        return this.$c.request(method, Users.__path__ + '/' + path, config);\r\n    };\r\n\r\n    Users.prototype.account = function() {\r\n        return this.$r('GET', 'account');\r\n    };\r\n\r\n    Users.prototype.login = function(username, password) {\r\n        if(!utils.isDefined(username) || !utils.isDefined(password)) {\r\n            throw new Error();\r\n        }\r\n\r\n        return this.$r('POST', 'sign_in.xml', {\r\n            headers: {\r\n                'Authorization': 'Basic ' + btoa(username + ':' + password)\r\n            }\r\n        });\r\n    };\r\n\r\n    // Register interface\r\n    Users.__path__ = '/users';\r\n\r\n    registry.set(Users);\r\n});\n","define('plex/cloud/main',[\n    'plex/core/headers',\n    'plex/cloud/interfaces/registry',\n    'httpinvoke',\n    'when',\n\n    // cloud interfaces\n    'plex/cloud/interfaces/api/home/root',\n    'plex/cloud/interfaces/api/home/users',\n    'plex/cloud/interfaces/api/invites',\n    'plex/cloud/interfaces/api/root',\n\n    'plex/cloud/interfaces/pms/main',\n    'plex/cloud/interfaces/pms/playlists',\n    'plex/cloud/interfaces/pms/social',\n\n    'plex/cloud/interfaces/devices',\n    'plex/cloud/interfaces/main',\n    'plex/cloud/interfaces/pins',\n    'plex/cloud/interfaces/root',\n    'plex/cloud/interfaces/users'\n], function(Headers, registry, httpinvoke, when) {\n    function Cloud() {\n        this.baseUrl = 'https://plex.tv';\n        this.headers = new Headers();\n\n        this.client_identifier = null;\n        this.token = null;\n\n        // Expose interfaces\n        registry.expose(this);\n        registry.exposeRoot(this);\n    }\n\n    Cloud.prototype.request = function(method, path, config) {\n        var url = this.baseUrl + path,\n            deferred = when.defer();\n\n        // Build request\n        config = typeof config !== 'undefined' ? config : {};\n        config.converters = {\n            'xml text': function(value) {\n                var serializer = new XMLSerializer();\n\n                return serializer.serializeToString(value);\n            },\n            'text xml': function(value) {\n                var parser = new DOMParser();\n\n                return parser.parseFromString(value, 'text/xml');\n            }\n        };\n        config.headers = this.headers.get(config.headers);\n\n        // Set extra headers\n        if(this.client_identifier !== null) {\n            config.headers['X-Plex-Client-Identifier'] = this.client_identifier;\n        }\n\n        if(this.token !== null) {\n            config.headers['X-Plex-Token'] = this.token;\n        }\n\n        // Send request\n        httpinvoke(url, method, config).then(function(response) {\n            // Handle response\n            if(response.statusCode >= 200 && response.statusCode <= 299) {\n                deferred.resolve(response.body);\n            } else {\n                deferred.reject(response.body, response.statusCode, response.headers, null, response.statusText);\n            }\n        }, function(statusText) {\n            // Socket error\n            deferred.reject(null, null, null, null, statusText);\n        });\n\n        return deferred.promise;\n    };\n\n    return Cloud;\n});\n","define('plex/server/interfaces/registry',[\r\n    'plex/core/interface_registry'\r\n], function(InterfaceRegistry) {\r\n    return new InterfaceRegistry();\r\n});\n","define('plex/server/interfaces/root',[\r\n    'plex/server/interfaces/registry'\r\n], function(registry) {\r\n    function Root($c) {\r\n        this.$c = $c;\r\n    }\r\n\r\n    Root.prototype.$r = function(method, path, config) {\r\n        config = typeof config !== 'undefined' ? config : {};\r\n        config.outputType = 'xml';\r\n\r\n        return this.$c.request(method, Root.__path__ + '/' + path, config);\r\n    };\r\n\r\n    Root.prototype.details = function() {\r\n        return this.$r('GET', '');\r\n    };\r\n\r\n    Root.prototype.identity = function() {\r\n        return this.$r('GET', 'identity');\r\n    };\r\n\r\n    // Register interface\r\n    Root.__path__ = '';\r\n\r\n    registry.set(Root);\r\n});\n","define('plex/server/main',[\n    'plex/core/headers',\n    'plex/server/interfaces/registry',\n    'httpinvoke',\n    'when',\n\n    // server interfaces\n    'plex/server/interfaces/root'\n], function(Headers, registry, httpinvoke, when) {\n    function Server(baseUrl) {\n        this.baseUrl = baseUrl;\n        this.headers = new Headers();\n\n        this.client_identifier = null;\n        this.token = null;\n\n        // Expose interfaces\n        registry.expose(this);\n        registry.exposeRoot(this);\n    }\n\n    Server.prototype.request = function(method, path, config) {\n        var url = this.baseUrl + path,\n            deferred = when.defer();\n\n        // Build request\n        config = typeof config !== 'undefined' ? config : {};\n        config.converters = {\n            'xml text': function(value) {\n                var serializer = new XMLSerializer();\n\n                return serializer.serializeToString(value);\n            },\n            'text xml': function(value) {\n                var parser = new DOMParser();\n\n                return parser.parseFromString(value, 'text/xml');\n            }\n        };\n        config.headers = this.headers.get(config.headers);\n\n        // Set extra headers\n        if(this.client_identifier !== null) {\n            config.headers['X-Plex-Client-Identifier'] = this.client_identifier;\n        }\n\n        if(this.token !== null) {\n            config.headers['X-Plex-Token'] = this.token;\n        }\n\n        // Send request\n        httpinvoke(url, method, config).then(function(response) {\n            // Handle response\n            if(response.statusCode >= 200 && response.statusCode <= 299) {\n                deferred.resolve(response.body);\n            } else {\n                deferred.reject(response.body, response.statusCode, response.headers, null, response.statusText);\n            }\n        }, function(statusText) {\n            // Socket error\n            deferred.reject(null, null, null, null, statusText);\n        });\n\n        return deferred.promise;\n    };\n\n    return Server;\n});\n","define('plex/main',[\r\n    'plex/cloud/main',\r\n    'plex/server/main'\r\n], function(Cloud, Server) {\r\n    return {\r\n        Cloud: Cloud,\r\n        Server: Server,\r\n\r\n        cloud: new Cloud()\r\n    };\r\n});\n","define('plex',[\r\n    'plex/main'\r\n], function(plex) {\r\n    console.log('plex initialized');\r\n\r\n    return plex;\r\n});\n"]}