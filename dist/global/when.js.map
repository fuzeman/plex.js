{"version":3,"file":"when.js","sources":["../../../../bower_components/almond/almond.js","lib/env.js","lib/TimeoutError.js","lib/decorators/timed.js","lib/state.js","lib/apply.js","lib/decorators/array.js","lib/decorators/flow.js","lib/decorators/fold.js","lib/decorators/inspect.js","lib/decorators/iterate.js","lib/decorators/progress.js","lib/decorators/with.js","lib/format.js","lib/decorators/unhandledRejection.js","lib/makePromise.js","lib/Scheduler.js","lib/Promise.js","when.js"],"names":["this","requirejs","require","define","undef","hasProp","obj","prop","hasOwn","call","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","lastIndex","foundI","foundStarMap","starI","i","j","part","baseParts","split","map","config","starMap","charAt","slice","length","nodeIdCompat","jsSuffixRegExp","test","replace","concat","splice","join","indexOf","substring","makeRequire","relName","forceSync","req","apply","aps","arguments","makeNormalize","makeLoad","depName","value","defined","callDep","waiting","args","defining","main","Error","splitPrefix","prefix","index","makeConfig","makeMap","handlers","Object","prototype","hasOwnProperty","plugin","parts","f","n","pr","p","exports","e","module","id","uri","deps","callback","cjsModule","ret","usingExports","callbackType","load","undefined","alt","setTimeout","cfg","_defined","amd","jQuery","isNode","process","toString","hasMutationObserver","MutationObserver","WebKitMutationObserver","initMutationObserver","run","scheduled","node","document","createTextNode","o","observe","characterData","data","MutationObs","capturedSetTimeout","setTimer","ms","clearTimer","t","clearTimeout","asap","nextTick","vertxRequire","vertx","cancelTimer","runOnLoop","runOnContext","factory","TimeoutError","message","captureStackTrace","create","constructor","x","y","env","Promise","handleDelay","h","resolveDelay","resolve","onTimeout","reason","reject","delay","_beget","_handler","fold","timeout","visit","notify","toPendingState","state","toRejectedState","toFulfilledState","inspect","handler","pending","fulfilled","rejected","makeApply","thisArg","_defer","l","params","Array","callAndResolve","c","callAndResolveNext","tryCatchResolve","resolver","applier","any","promises","handleFulfill","errors","handleReject","resolved","push","become","_visitRemaining","RangeError","some","fulfill","results","nFulfill","nReject","Math","max","min","_traverse","filter","predicate","a","then","keep","filterSync","filtered","settle","all","settleOne","toPromise","_unreport","reduce","ar","liftCombine","reduceRight","arr","z","applyFold","spread","onFulfilled","array","rejectInvalidPredicate","TypeError","evaluatePredicate","isError","maybeThenable","identity","createCatchFilter","runSideEffect","propagate","result","propagateValue","origCatch","done","onResult","onError","receiver","otherwise","onRejected","ensure","orElse","defaultValue","tap","onFulfilledSideEffect","promise","to","iterate","condition","unfold","unspool","next","item","newSeed","seed","progress","onProgress","withThis","child","chain","formatError","s","stack","formatObject","String","JSON","tryStringify","stringify","throwit","noop","format","report","r","handled","reported","logError","unreport","logInfo","enqueue","tasks","running","flush","shift","localConsole","console","error","log","info","onPotentiallyUnhandledRejection","rejection","onPotentiallyUnhandledRejectionHandled","onFatalRejection","environment","Handler","init","promiseResolve","promiseReject","promiseNotify","Pending","isPromise","Async","getHandler","Rejected","never","foreverPendingPromise","defer","begetFrom","parent","context","traverseWith","snd","traverse","tryCatch2","tryMap","mapAt","traverseAt","settleAt","Fulfilled","getHandlerMaybeThenable","visitRemaining","start","markAsHandled","race","runRace","getHandlerUntrusted","untrustedThen","Thenable","FailIfRejected","inheritedContext","createContext","consumers","thenable","AssimilateTask","errorId","_report","ReportTask","UnreportTask","cycle","ContinuationTask","continuation","ProgressTask","_then","tryAssimilate","Fold","failIfRejected","runContinuation1","enterContext","tryCatchReject","exitContext","runContinuation3","tryCatchReject3","runNotify","tryCatchReturn","b","inherit","Parent","Child","objectCreate","initEmitRejection","emit","type","self","CustomEvent","hasCustomEvent","ev","detail","key","bubbles","cancelable","dispatchEvent","scheduler","emitRejection","proto","when","fail","_state","q","cont","afterQueue","foreverPendingHandler","_resolve","_reject","_notify","Scheduler","async","_async","_running","_queue","_queueLen","_afterQueue","_afterQueueLen","drain","_drain","task","makePromise","lift","attempt","Deferred","isPromiseLike","mapFunc","timed","flow","generate","unhandledRejection","feature"],"mappings":"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EAAA,OAAAuB,EACAvB,EAAAuB,QAAAA,EAEAvB,EAAA9H,QAAAtG,EAAAsG,QACA8H,EAAA5H,OAAAxG,EAAAwG,OAEA4H,EAAAlU,KAAAA,EAEAkU,EAAArK,IAAAA,EACAqK,EAAAtK,OAAAA,EAEAsK,EAAAhM,IAAAsN,EAAA1P,EAAAoC,KACAgM,EAAAtL,KAAA4M,EAAA1P,EAAA8C,MACAsL,EAAAnD,KAAAyE,EAAA1P,EAAAiL,MAEAmD,EAAA9U,IAAAA,EACA8U,EAAA7K,OAAAA,EACA6K,EAAAjK,OAAAuL,EAAA1P,EAAAmE,QACAiK,EAAA9J,YAAAoL,EAAA1P,EAAAsE,aAEA8J,EAAAyB,cAAAA,EAEAzB,EAAApO,QAAAA,EACAoO,EAAApE,MAAAA,EAIAoE,EAAA5O,aAAAA,EAiKA4O,KAEA,kBAAArW,IAAAA,EAAAwF,IAAAxF,EAAA,SAAAwH,GAAA/C,OAAAF,QAAAiD,EAAAzH,KAEAA,EAAA;;;;;;;;AlBrxaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzEA,AD0EA;ACznCA,ADoCA;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxlSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxDA,ADyDA;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvg6BA;AC/5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChFA,ADiFA;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/**\n * @license almond 0.2.9 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                //Convert baseName to array, and lop off the last part,\n                //so that . matches that \"directory\" and not name of the baseName's\n                //module. For instance, baseName of \"one/two/three\", maps to\n                //\"one/two/three.js\", but we want the directory, \"one/two\" for\n                //this normalization.\n                baseParts = baseParts.slice(0, baseParts.length - 1);\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                name = baseParts.concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            return req.apply(undef, aps.call(arguments, 0).concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"../../../../bower_components/almond/almond.js\", function(){});\n\n","/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n/*global process,document,setTimeout,clearTimeout,MutationObserver,WebKitMutationObserver*/\n(function(define) { 'use strict';\ndefine('lib/env',['require'],function(require) {\n\t/*jshint maxcomplexity:6*/\n\n\t// Sniff \"best\" async scheduling option\n\t// Prefer process.nextTick or MutationObserver, then check for\n\t// setTimeout, and finally vertx, since its the only env that doesn't\n\t// have setTimeout\n\n\tvar MutationObs;\n\tvar capturedSetTimeout = typeof setTimeout !== 'undefined' && setTimeout;\n\n\t// Default env\n\tvar setTimer = function(f, ms) { return setTimeout(f, ms); };\n\tvar clearTimer = function(t) { return clearTimeout(t); };\n\tvar asap = function (f) { return capturedSetTimeout(f, 0); };\n\n\t// Detect specific env\n\tif (isNode()) { // Node\n\t\tasap = function (f) { return process.nextTick(f); };\n\n\t} else if (MutationObs = hasMutationObserver()) { // Modern browser\n\t\tasap = initMutationObserver(MutationObs);\n\n\t} else if (!capturedSetTimeout) { // vert.x\n\t\tvar vertxRequire = require;\n\t\tvar vertx = vertxRequire('vertx');\n\t\tsetTimer = function (f, ms) { return vertx.setTimer(ms, f); };\n\t\tclearTimer = vertx.cancelTimer;\n\t\tasap = vertx.runOnLoop || vertx.runOnContext;\n\t}\n\n\treturn {\n\t\tsetTimer: setTimer,\n\t\tclearTimer: clearTimer,\n\t\tasap: asap\n\t};\n\n\tfunction isNode () {\n\t\treturn typeof process !== 'undefined' &&\n\t\t\tObject.prototype.toString.call(process) === '[object process]';\n\t}\n\n\tfunction hasMutationObserver () {\n\t\treturn (typeof MutationObserver === 'function' && MutationObserver) ||\n\t\t\t(typeof WebKitMutationObserver === 'function' && WebKitMutationObserver);\n\t}\n\n\tfunction initMutationObserver(MutationObserver) {\n\t\tvar scheduled;\n\t\tvar node = document.createTextNode('');\n\t\tvar o = new MutationObserver(run);\n\t\to.observe(node, { characterData: true });\n\n\t\tfunction run() {\n\t\t\tvar f = scheduled;\n\t\t\tscheduled = void 0;\n\t\t\tf();\n\t\t}\n\n\t\tvar i = 0;\n\t\treturn function (f) {\n\t\t\tscheduled = f;\n\t\t\tnode.data = (i ^= 1);\n\t\t};\n\t}\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(require); }));\n\n","/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine('lib/TimeoutError',[],function() {\n\n\t/**\n\t * Custom error type for promises rejected by promise.timeout\n\t * @param {string} message\n\t * @constructor\n\t */\n\tfunction TimeoutError (message) {\n\t\tError.call(this);\n\t\tthis.message = message;\n\t\tthis.name = TimeoutError.name;\n\t\tif (typeof Error.captureStackTrace === 'function') {\n\t\t\tError.captureStackTrace(this, TimeoutError);\n\t\t}\n\t}\n\n\tTimeoutError.prototype = Object.create(Error.prototype);\n\tTimeoutError.prototype.constructor = TimeoutError;\n\n\treturn TimeoutError;\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n","/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine('lib/decorators/timed',['require','../env','../TimeoutError'],function(require) {\n\n\tvar env = require('../env');\n\tvar TimeoutError = require('../TimeoutError');\n\n\tfunction setTimeout(f, ms, x, y) {\n\t\treturn env.setTimer(function() {\n\t\t\tf(x, y, ms);\n\t\t}, ms);\n\t}\n\n\treturn function timed(Promise) {\n\t\t/**\n\t\t * Return a new promise whose fulfillment value is revealed only\n\t\t * after ms milliseconds\n\t\t * @param {number} ms milliseconds\n\t\t * @returns {Promise}\n\t\t */\n\t\tPromise.prototype.delay = function(ms) {\n\t\t\tvar p = this._beget();\n\t\t\tthis._handler.fold(handleDelay, ms, void 0, p._handler);\n\t\t\treturn p;\n\t\t};\n\n\t\tfunction handleDelay(ms, x, h) {\n\t\t\tsetTimeout(resolveDelay, ms, x, h);\n\t\t}\n\n\t\tfunction resolveDelay(x, h) {\n\t\t\th.resolve(x);\n\t\t}\n\n\t\t/**\n\t\t * Return a new promise that rejects after ms milliseconds unless\n\t\t * this promise fulfills earlier, in which case the returned promise\n\t\t * fulfills with the same value.\n\t\t * @param {number} ms milliseconds\n\t\t * @param {Error|*=} reason optional rejection reason to use, defaults\n\t\t *   to a TimeoutError if not provided\n\t\t * @returns {Promise}\n\t\t */\n\t\tPromise.prototype.timeout = function(ms, reason) {\n\t\t\tvar p = this._beget();\n\t\t\tvar h = p._handler;\n\n\t\t\tvar t = setTimeout(onTimeout, ms, reason, p._handler);\n\n\t\t\tthis._handler.visit(h,\n\t\t\t\tfunction onFulfill(x) {\n\t\t\t\t\tenv.clearTimer(t);\n\t\t\t\t\tthis.resolve(x); // this = h\n\t\t\t\t},\n\t\t\t\tfunction onReject(x) {\n\t\t\t\t\tenv.clearTimer(t);\n\t\t\t\t\tthis.reject(x); // this = h\n\t\t\t\t},\n\t\t\t\th.notify);\n\n\t\t\treturn p;\n\t\t};\n\n\t\tfunction onTimeout(reason, h, ms) {\n\t\t\tvar e = typeof reason === 'undefined'\n\t\t\t\t? new TimeoutError('timed out after ' + ms + 'ms')\n\t\t\t\t: reason;\n\t\t\th.reject(e);\n\t\t}\n\n\t\treturn Promise;\n\t};\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(require); }));\n\n","/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine('lib/state',[],function() {\n\n\treturn {\n\t\tpending: toPendingState,\n\t\tfulfilled: toFulfilledState,\n\t\trejected: toRejectedState,\n\t\tinspect: inspect\n\t};\n\n\tfunction toPendingState() {\n\t\treturn { state: 'pending' };\n\t}\n\n\tfunction toRejectedState(e) {\n\t\treturn { state: 'rejected', reason: e };\n\t}\n\n\tfunction toFulfilledState(x) {\n\t\treturn { state: 'fulfilled', value: x };\n\t}\n\n\tfunction inspect(handler) {\n\t\tvar state = handler.state();\n\t\treturn state === 0 ? toPendingState()\n\t\t\t : state > 0   ? toFulfilledState(handler.value)\n\t\t\t               : toRejectedState(handler.value);\n\t}\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n\n","/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine('lib/apply',[],function() {\n\n\tmakeApply.tryCatchResolve = tryCatchResolve;\n\n\treturn makeApply;\n\n\tfunction makeApply(Promise, call) {\n\t\tif(arguments.length < 2) {\n\t\t\tcall = tryCatchResolve;\n\t\t}\n\n\t\treturn apply;\n\n\t\tfunction apply(f, thisArg, args) {\n\t\t\tvar p = Promise._defer();\n\t\t\tvar l = args.length;\n\t\t\tvar params = new Array(l);\n\t\t\tcallAndResolve({ f:f, thisArg:thisArg, args:args, params:params, i:l-1, call:call }, p._handler);\n\n\t\t\treturn p;\n\t\t}\n\n\t\tfunction callAndResolve(c, h) {\n\t\t\tif(c.i < 0) {\n\t\t\t\treturn call(c.f, c.thisArg, c.params, h);\n\t\t\t}\n\n\t\t\tvar handler = Promise._handler(c.args[c.i]);\n\t\t\thandler.fold(callAndResolveNext, c, void 0, h);\n\t\t}\n\n\t\tfunction callAndResolveNext(c, x, h) {\n\t\t\tc.params[c.i] = x;\n\t\t\tc.i -= 1;\n\t\t\tcallAndResolve(c, h);\n\t\t}\n\t}\n\n\tfunction tryCatchResolve(f, thisArg, args, resolver) {\n\t\ttry {\n\t\t\tresolver.resolve(f.apply(thisArg, args));\n\t\t} catch(e) {\n\t\t\tresolver.reject(e);\n\t\t}\n\t}\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n\n\n\n","/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine('lib/decorators/array',['require','../state','../apply'],function(require) {\n\n\tvar state = require('../state');\n\tvar applier = require('../apply');\n\n\treturn function array(Promise) {\n\n\t\tvar applyFold = applier(Promise);\n\t\tvar toPromise = Promise.resolve;\n\t\tvar all = Promise.all;\n\n\t\tvar ar = Array.prototype.reduce;\n\t\tvar arr = Array.prototype.reduceRight;\n\t\tvar slice = Array.prototype.slice;\n\n\t\t// Additional array combinators\n\n\t\tPromise.any = any;\n\t\tPromise.some = some;\n\t\tPromise.settle = settle;\n\n\t\tPromise.map = map;\n\t\tPromise.filter = filter;\n\t\tPromise.reduce = reduce;\n\t\tPromise.reduceRight = reduceRight;\n\n\t\t/**\n\t\t * When this promise fulfills with an array, do\n\t\t * onFulfilled.apply(void 0, array)\n\t\t * @param {function} onFulfilled function to apply\n\t\t * @returns {Promise} promise for the result of applying onFulfilled\n\t\t */\n\t\tPromise.prototype.spread = function(onFulfilled) {\n\t\t\treturn this.then(all).then(function(array) {\n\t\t\t\treturn onFulfilled.apply(this, array);\n\t\t\t});\n\t\t};\n\n\t\treturn Promise;\n\n\t\t/**\n\t\t * One-winner competitive race.\n\t\t * Return a promise that will fulfill when one of the promises\n\t\t * in the input array fulfills, or will reject when all promises\n\t\t * have rejected.\n\t\t * @param {array} promises\n\t\t * @returns {Promise} promise for the first fulfilled value\n\t\t */\n\t\tfunction any(promises) {\n\t\t\tvar p = Promise._defer();\n\t\t\tvar resolver = p._handler;\n\t\t\tvar l = promises.length>>>0;\n\n\t\t\tvar pending = l;\n\t\t\tvar errors = [];\n\n\t\t\tfor (var h, x, i = 0; i < l; ++i) {\n\t\t\t\tx = promises[i];\n\t\t\t\tif(x === void 0 && !(i in promises)) {\n\t\t\t\t\t--pending;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\th = Promise._handler(x);\n\t\t\t\tif(h.state() > 0) {\n\t\t\t\t\tresolver.become(h);\n\t\t\t\t\tPromise._visitRemaining(promises, i, h);\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\th.visit(resolver, handleFulfill, handleReject);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(pending === 0) {\n\t\t\t\tresolver.reject(new RangeError('any(): array must not be empty'));\n\t\t\t}\n\n\t\t\treturn p;\n\n\t\t\tfunction handleFulfill(x) {\n\t\t\t\t/*jshint validthis:true*/\n\t\t\t\terrors = null;\n\t\t\t\tthis.resolve(x); // this === resolver\n\t\t\t}\n\n\t\t\tfunction handleReject(e) {\n\t\t\t\t/*jshint validthis:true*/\n\t\t\t\tif(this.resolved) { // this === resolver\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\terrors.push(e);\n\t\t\t\tif(--pending === 0) {\n\t\t\t\t\tthis.reject(errors);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * N-winner competitive race\n\t\t * Return a promise that will fulfill when n input promises have\n\t\t * fulfilled, or will reject when it becomes impossible for n\n\t\t * input promises to fulfill (ie when promises.length - n + 1\n\t\t * have rejected)\n\t\t * @param {array} promises\n\t\t * @param {number} n\n\t\t * @returns {Promise} promise for the earliest n fulfillment values\n\t\t *\n\t\t * @deprecated\n\t\t */\n\t\tfunction some(promises, n) {\n\t\t\t/*jshint maxcomplexity:7*/\n\t\t\tvar p = Promise._defer();\n\t\t\tvar resolver = p._handler;\n\n\t\t\tvar results = [];\n\t\t\tvar errors = [];\n\n\t\t\tvar l = promises.length>>>0;\n\t\t\tvar nFulfill = 0;\n\t\t\tvar nReject;\n\t\t\tvar x, i; // reused in both for() loops\n\n\t\t\t// First pass: count actual array items\n\t\t\tfor(i=0; i<l; ++i) {\n\t\t\t\tx = promises[i];\n\t\t\t\tif(x === void 0 && !(i in promises)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t++nFulfill;\n\t\t\t}\n\n\t\t\t// Compute actual goals\n\t\t\tn = Math.max(n, 0);\n\t\t\tnReject = (nFulfill - n + 1);\n\t\t\tnFulfill = Math.min(n, nFulfill);\n\n\t\t\tif(n > nFulfill) {\n\t\t\t\tresolver.reject(new RangeError('some(): array must contain at least '\n\t\t\t\t+ n + ' item(s), but had ' + nFulfill));\n\t\t\t} else if(nFulfill === 0) {\n\t\t\t\tresolver.resolve(results);\n\t\t\t}\n\n\t\t\t// Second pass: observe each array item, make progress toward goals\n\t\t\tfor(i=0; i<l; ++i) {\n\t\t\t\tx = promises[i];\n\t\t\t\tif(x === void 0 && !(i in promises)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tPromise._handler(x).visit(resolver, fulfill, reject, resolver.notify);\n\t\t\t}\n\n\t\t\treturn p;\n\n\t\t\tfunction fulfill(x) {\n\t\t\t\t/*jshint validthis:true*/\n\t\t\t\tif(this.resolved) { // this === resolver\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresults.push(x);\n\t\t\t\tif(--nFulfill === 0) {\n\t\t\t\t\terrors = null;\n\t\t\t\t\tthis.resolve(results);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction reject(e) {\n\t\t\t\t/*jshint validthis:true*/\n\t\t\t\tif(this.resolved) { // this === resolver\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\terrors.push(e);\n\t\t\t\tif(--nReject === 0) {\n\t\t\t\t\tresults = null;\n\t\t\t\t\tthis.reject(errors);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Apply f to the value of each promise in a list of promises\n\t\t * and return a new list containing the results.\n\t\t * @param {array} promises\n\t\t * @param {function(x:*, index:Number):*} f mapping function\n\t\t * @returns {Promise}\n\t\t */\n\t\tfunction map(promises, f) {\n\t\t\treturn Promise._traverse(f, promises);\n\t\t}\n\n\t\t/**\n\t\t * Filter the provided array of promises using the provided predicate.  Input may\n\t\t * contain promises and values\n\t\t * @param {Array} promises array of promises and values\n\t\t * @param {function(x:*, index:Number):boolean} predicate filtering predicate.\n\t\t *  Must return truthy (or promise for truthy) for items to retain.\n\t\t * @returns {Promise} promise that will fulfill with an array containing all items\n\t\t *  for which predicate returned truthy.\n\t\t */\n\t\tfunction filter(promises, predicate) {\n\t\t\tvar a = slice.call(promises);\n\t\t\treturn Promise._traverse(predicate, a).then(function(keep) {\n\t\t\t\treturn filterSync(a, keep);\n\t\t\t});\n\t\t}\n\n\t\tfunction filterSync(promises, keep) {\n\t\t\t// Safe because we know all promises have fulfilled if we've made it this far\n\t\t\tvar l = keep.length;\n\t\t\tvar filtered = new Array(l);\n\t\t\tfor(var i=0, j=0; i<l; ++i) {\n\t\t\t\tif(keep[i]) {\n\t\t\t\t\tfiltered[j++] = Promise._handler(promises[i]).value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfiltered.length = j;\n\t\t\treturn filtered;\n\n\t\t}\n\n\t\t/**\n\t\t * Return a promise that will always fulfill with an array containing\n\t\t * the outcome states of all input promises.  The returned promise\n\t\t * will never reject.\n\t\t * @param {Array} promises\n\t\t * @returns {Promise} promise for array of settled state descriptors\n\t\t */\n\t\tfunction settle(promises) {\n\t\t\treturn all(promises.map(settleOne));\n\t\t}\n\n\t\tfunction settleOne(p) {\n\t\t\tvar h = Promise._handler(p);\n\t\t\tif(h.state() === 0) {\n\t\t\t\treturn toPromise(p).then(state.fulfilled, state.rejected);\n\t\t\t}\n\n\t\t\th._unreport();\n\t\t\treturn state.inspect(h);\n\t\t}\n\n\t\t/**\n\t\t * Traditional reduce function, similar to `Array.prototype.reduce()`, but\n\t\t * input may contain promises and/or values, and reduceFunc\n\t\t * may return either a value or a promise, *and* initialValue may\n\t\t * be a promise for the starting value.\n\t\t * @param {Array|Promise} promises array or promise for an array of anything,\n\t\t *      may contain a mix of promises and values.\n\t\t * @param {function(accumulated:*, x:*, index:Number):*} f reduce function\n\t\t * @returns {Promise} that will resolve to the final reduced value\n\t\t */\n\t\tfunction reduce(promises, f /*, initialValue */) {\n\t\t\treturn arguments.length > 2 ? ar.call(promises, liftCombine(f), arguments[2])\n\t\t\t\t\t: ar.call(promises, liftCombine(f));\n\t\t}\n\n\t\t/**\n\t\t * Traditional reduce function, similar to `Array.prototype.reduceRight()`, but\n\t\t * input may contain promises and/or values, and reduceFunc\n\t\t * may return either a value or a promise, *and* initialValue may\n\t\t * be a promise for the starting value.\n\t\t * @param {Array|Promise} promises array or promise for an array of anything,\n\t\t *      may contain a mix of promises and values.\n\t\t * @param {function(accumulated:*, x:*, index:Number):*} f reduce function\n\t\t * @returns {Promise} that will resolve to the final reduced value\n\t\t */\n\t\tfunction reduceRight(promises, f /*, initialValue */) {\n\t\t\treturn arguments.length > 2 ? arr.call(promises, liftCombine(f), arguments[2])\n\t\t\t\t\t: arr.call(promises, liftCombine(f));\n\t\t}\n\n\t\tfunction liftCombine(f) {\n\t\t\treturn function(z, x, i) {\n\t\t\t\treturn applyFold(f, void 0, [z,x,i]);\n\t\t\t};\n\t\t}\n\t};\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(require); }));\n\n","/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine('lib/decorators/flow',[],function() {\n\n\treturn function flow(Promise) {\n\n\t\tvar resolve = Promise.resolve;\n\t\tvar reject = Promise.reject;\n\t\tvar origCatch = Promise.prototype['catch'];\n\n\t\t/**\n\t\t * Handle the ultimate fulfillment value or rejection reason, and assume\n\t\t * responsibility for all errors.  If an error propagates out of result\n\t\t * or handleFatalError, it will be rethrown to the host, resulting in a\n\t\t * loud stack track on most platforms and a crash on some.\n\t\t * @param {function?} onResult\n\t\t * @param {function?} onError\n\t\t * @returns {undefined}\n\t\t */\n\t\tPromise.prototype.done = function(onResult, onError) {\n\t\t\tthis._handler.visit(this._handler.receiver, onResult, onError);\n\t\t};\n\n\t\t/**\n\t\t * Add Error-type and predicate matching to catch.  Examples:\n\t\t * promise.catch(TypeError, handleTypeError)\n\t\t *   .catch(predicate, handleMatchedErrors)\n\t\t *   .catch(handleRemainingErrors)\n\t\t * @param onRejected\n\t\t * @returns {*}\n\t\t */\n\t\tPromise.prototype['catch'] = Promise.prototype.otherwise = function(onRejected) {\n\t\t\tif (arguments.length < 2) {\n\t\t\t\treturn origCatch.call(this, onRejected);\n\t\t\t}\n\n\t\t\tif(typeof onRejected !== 'function') {\n\t\t\t\treturn this.ensure(rejectInvalidPredicate);\n\t\t\t}\n\n\t\t\treturn origCatch.call(this, createCatchFilter(arguments[1], onRejected));\n\t\t};\n\n\t\t/**\n\t\t * Wraps the provided catch handler, so that it will only be called\n\t\t * if the predicate evaluates truthy\n\t\t * @param {?function} handler\n\t\t * @param {function} predicate\n\t\t * @returns {function} conditional catch handler\n\t\t */\n\t\tfunction createCatchFilter(handler, predicate) {\n\t\t\treturn function(e) {\n\t\t\t\treturn evaluatePredicate(e, predicate)\n\t\t\t\t\t? handler.call(this, e)\n\t\t\t\t\t: reject(e);\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Ensures that onFulfilledOrRejected will be called regardless of whether\n\t\t * this promise is fulfilled or rejected.  onFulfilledOrRejected WILL NOT\n\t\t * receive the promises' value or reason.  Any returned value will be disregarded.\n\t\t * onFulfilledOrRejected may throw or return a rejected promise to signal\n\t\t * an additional error.\n\t\t * @param {function} handler handler to be called regardless of\n\t\t *  fulfillment or rejection\n\t\t * @returns {Promise}\n\t\t */\n\t\tPromise.prototype['finally'] = Promise.prototype.ensure = function(handler) {\n\t\t\tif(typeof handler !== 'function') {\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\treturn this.then(function(x) {\n\t\t\t\treturn runSideEffect(handler, this, identity, x);\n\t\t\t}, function(e) {\n\t\t\t\treturn runSideEffect(handler, this, reject, e);\n\t\t\t});\n\t\t};\n\n\t\tfunction runSideEffect (handler, thisArg, propagate, value) {\n\t\t\tvar result = handler.call(thisArg);\n\t\t\treturn maybeThenable(result)\n\t\t\t\t? propagateValue(result, propagate, value)\n\t\t\t\t: propagate(value);\n\t\t}\n\n\t\tfunction propagateValue (result, propagate, x) {\n\t\t\treturn resolve(result).then(function () {\n\t\t\t\treturn propagate(x);\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Recover from a failure by returning a defaultValue.  If defaultValue\n\t\t * is a promise, it's fulfillment value will be used.  If defaultValue is\n\t\t * a promise that rejects, the returned promise will reject with the\n\t\t * same reason.\n\t\t * @param {*} defaultValue\n\t\t * @returns {Promise} new promise\n\t\t */\n\t\tPromise.prototype['else'] = Promise.prototype.orElse = function(defaultValue) {\n\t\t\treturn this.then(void 0, function() {\n\t\t\t\treturn defaultValue;\n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t * Shortcut for .then(function() { return value; })\n\t\t * @param  {*} value\n\t\t * @return {Promise} a promise that:\n\t\t *  - is fulfilled if value is not a promise, or\n\t\t *  - if value is a promise, will fulfill with its value, or reject\n\t\t *    with its reason.\n\t\t */\n\t\tPromise.prototype['yield'] = function(value) {\n\t\t\treturn this.then(function() {\n\t\t\t\treturn value;\n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t * Runs a side effect when this promise fulfills, without changing the\n\t\t * fulfillment value.\n\t\t * @param {function} onFulfilledSideEffect\n\t\t * @returns {Promise}\n\t\t */\n\t\tPromise.prototype.tap = function(onFulfilledSideEffect) {\n\t\t\treturn this.then(onFulfilledSideEffect)['yield'](this);\n\t\t};\n\n\t\treturn Promise;\n\t};\n\n\tfunction rejectInvalidPredicate() {\n\t\tthrow new TypeError('catch predicate must be a function');\n\t}\n\n\tfunction evaluatePredicate(e, predicate) {\n\t\treturn isError(predicate) ? e instanceof predicate : predicate(e);\n\t}\n\n\tfunction isError(predicate) {\n\t\treturn predicate === Error\n\t\t\t|| (predicate != null && predicate.prototype instanceof Error);\n\t}\n\n\tfunction maybeThenable(x) {\n\t\treturn (typeof x === 'object' || typeof x === 'function') && x !== null;\n\t}\n\n\tfunction identity(x) {\n\t\treturn x;\n\t}\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n\n","/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n/** @author Jeff Escalante */\n\n(function(define) { 'use strict';\ndefine('lib/decorators/fold',[],function() {\n\n\treturn function fold(Promise) {\n\n\t\tPromise.prototype.fold = function(f, z) {\n\t\t\tvar promise = this._beget();\n\n\t\t\tthis._handler.fold(function(z, x, to) {\n\t\t\t\tPromise._handler(z).fold(function(x, z, to) {\n\t\t\t\t\tto.resolve(f.call(this, z, x));\n\t\t\t\t}, x, this, to);\n\t\t\t}, z, promise._handler.receiver, promise._handler);\n\n\t\t\treturn promise;\n\t\t};\n\n\t\treturn Promise;\n\t};\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n\n","/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine('lib/decorators/inspect',['require','../state'],function(require) {\n\n\tvar inspect = require('../state').inspect;\n\n\treturn function inspection(Promise) {\n\n\t\tPromise.prototype.inspect = function() {\n\t\t\treturn inspect(Promise._handler(this));\n\t\t};\n\n\t\treturn Promise;\n\t};\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(require); }));\n\n","/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine('lib/decorators/iterate',[],function() {\n\n\treturn function generate(Promise) {\n\n\t\tvar resolve = Promise.resolve;\n\n\t\tPromise.iterate = iterate;\n\t\tPromise.unfold = unfold;\n\n\t\treturn Promise;\n\n\t\t/**\n\t\t * @deprecated Use github.com/cujojs/most streams and most.iterate\n\t\t * Generate a (potentially infinite) stream of promised values:\n\t\t * x, f(x), f(f(x)), etc. until condition(x) returns true\n\t\t * @param {function} f function to generate a new x from the previous x\n\t\t * @param {function} condition function that, given the current x, returns\n\t\t *  truthy when the iterate should stop\n\t\t * @param {function} handler function to handle the value produced by f\n\t\t * @param {*|Promise} x starting value, may be a promise\n\t\t * @return {Promise} the result of the last call to f before\n\t\t *  condition returns true\n\t\t */\n\t\tfunction iterate(f, condition, handler, x) {\n\t\t\treturn unfold(function(x) {\n\t\t\t\treturn [x, f(x)];\n\t\t\t}, condition, handler, x);\n\t\t}\n\n\t\t/**\n\t\t * @deprecated Use github.com/cujojs/most streams and most.unfold\n\t\t * Generate a (potentially infinite) stream of promised values\n\t\t * by applying handler(generator(seed)) iteratively until\n\t\t * condition(seed) returns true.\n\t\t * @param {function} unspool function that generates a [value, newSeed]\n\t\t *  given a seed.\n\t\t * @param {function} condition function that, given the current seed, returns\n\t\t *  truthy when the unfold should stop\n\t\t * @param {function} handler function to handle the value produced by unspool\n\t\t * @param x {*|Promise} starting value, may be a promise\n\t\t * @return {Promise} the result of the last value produced by unspool before\n\t\t *  condition returns true\n\t\t */\n\t\tfunction unfold(unspool, condition, handler, x) {\n\t\t\treturn resolve(x).then(function(seed) {\n\t\t\t\treturn resolve(condition(seed)).then(function(done) {\n\t\t\t\t\treturn done ? seed : resolve(unspool(seed)).spread(next);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tfunction next(item, newSeed) {\n\t\t\t\treturn resolve(handler(item)).then(function() {\n\t\t\t\t\treturn unfold(unspool, condition, handler, newSeed);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n\n","/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine('lib/decorators/progress',[],function() {\n\n\treturn function progress(Promise) {\n\n\t\t/**\n\t\t * @deprecated\n\t\t * Register a progress handler for this promise\n\t\t * @param {function} onProgress\n\t\t * @returns {Promise}\n\t\t */\n\t\tPromise.prototype.progress = function(onProgress) {\n\t\t\treturn this.then(void 0, void 0, onProgress);\n\t\t};\n\n\t\treturn Promise;\n\t};\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n\n","/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine('lib/decorators/with',[],function() {\n\n\treturn function addWith(Promise) {\n\t\t/**\n\t\t * Returns a promise whose handlers will be called with `this` set to\n\t\t * the supplied receiver.  Subsequent promises derived from the\n\t\t * returned promise will also have their handlers called with receiver\n\t\t * as `this`. Calling `with` with undefined or no arguments will return\n\t\t * a promise whose handlers will again be called in the usual Promises/A+\n\t\t * way (no `this`) thus safely undoing any previous `with` in the\n\t\t * promise chain.\n\t\t *\n\t\t * WARNING: Promises returned from `with`/`withThis` are NOT Promises/A+\n\t\t * compliant, specifically violating 2.2.5 (http://promisesaplus.com/#point-41)\n\t\t *\n\t\t * @param {object} receiver `this` value for all handlers attached to\n\t\t *  the returned promise.\n\t\t * @returns {Promise}\n\t\t */\n\t\tPromise.prototype['with'] = Promise.prototype.withThis = function(receiver) {\n\t\t\tvar p = this._beget();\n\t\t\tvar child = p._handler;\n\t\t\tchild.receiver = receiver;\n\t\t\tthis._handler.chain(child, receiver);\n\t\t\treturn p;\n\t\t};\n\n\t\treturn Promise;\n\t};\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n\n\n","/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine('lib/format',[],function() {\n\n\treturn {\n\t\tformatError: formatError,\n\t\tformatObject: formatObject,\n\t\ttryStringify: tryStringify\n\t};\n\n\t/**\n\t * Format an error into a string.  If e is an Error and has a stack property,\n\t * it's returned.  Otherwise, e is formatted using formatObject, with a\n\t * warning added about e not being a proper Error.\n\t * @param {*} e\n\t * @returns {String} formatted string, suitable for output to developers\n\t */\n\tfunction formatError(e) {\n\t\tvar s = typeof e === 'object' && e !== null && e.stack ? e.stack : formatObject(e);\n\t\treturn e instanceof Error ? s : s + ' (WARNING: non-Error used)';\n\t}\n\n\t/**\n\t * Format an object, detecting \"plain\" objects and running them through\n\t * JSON.stringify if possible.\n\t * @param {Object} o\n\t * @returns {string}\n\t */\n\tfunction formatObject(o) {\n\t\tvar s = String(o);\n\t\tif(s === '[object Object]' && typeof JSON !== 'undefined') {\n\t\t\ts = tryStringify(o, s);\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t * Try to return the result of JSON.stringify(x).  If that fails, return\n\t * defaultValue\n\t * @param {*} x\n\t * @param {*} defaultValue\n\t * @returns {String|*} JSON.stringify(x) or defaultValue\n\t */\n\tfunction tryStringify(x, defaultValue) {\n\t\ttry {\n\t\t\treturn JSON.stringify(x);\n\t\t} catch(e) {\n\t\t\treturn defaultValue;\n\t\t}\n\t}\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n\n","/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine('lib/decorators/unhandledRejection',['require','../env','../format'],function(require) {\n\n\tvar setTimer = require('../env').setTimer;\n\tvar format = require('../format');\n\n\treturn function unhandledRejection(Promise) {\n\n\t\tvar logError = noop;\n\t\tvar logInfo = noop;\n\t\tvar localConsole;\n\n\t\tif(typeof console !== 'undefined') {\n\t\t\t// Alias console to prevent things like uglify's drop_console option from\n\t\t\t// removing console.log/error. Unhandled rejections fall into the same\n\t\t\t// category as uncaught exceptions, and build tools shouldn't silence them.\n\t\t\tlocalConsole = console;\n\t\t\tlogError = typeof localConsole.error !== 'undefined'\n\t\t\t\t? function (e) { localConsole.error(e); }\n\t\t\t\t: function (e) { localConsole.log(e); };\n\n\t\t\tlogInfo = typeof localConsole.info !== 'undefined'\n\t\t\t\t? function (e) { localConsole.info(e); }\n\t\t\t\t: function (e) { localConsole.log(e); };\n\t\t}\n\n\t\tPromise.onPotentiallyUnhandledRejection = function(rejection) {\n\t\t\tenqueue(report, rejection);\n\t\t};\n\n\t\tPromise.onPotentiallyUnhandledRejectionHandled = function(rejection) {\n\t\t\tenqueue(unreport, rejection);\n\t\t};\n\n\t\tPromise.onFatalRejection = function(rejection) {\n\t\t\tenqueue(throwit, rejection.value);\n\t\t};\n\n\t\tvar tasks = [];\n\t\tvar reported = [];\n\t\tvar running = null;\n\n\t\tfunction report(r) {\n\t\t\tif(!r.handled) {\n\t\t\t\treported.push(r);\n\t\t\t\tlogError('Potentially unhandled rejection [' + r.id + '] ' + format.formatError(r.value));\n\t\t\t}\n\t\t}\n\n\t\tfunction unreport(r) {\n\t\t\tvar i = reported.indexOf(r);\n\t\t\tif(i >= 0) {\n\t\t\t\treported.splice(i, 1);\n\t\t\t\tlogInfo('Handled previous rejection [' + r.id + '] ' + format.formatObject(r.value));\n\t\t\t}\n\t\t}\n\n\t\tfunction enqueue(f, x) {\n\t\t\ttasks.push(f, x);\n\t\t\tif(running === null) {\n\t\t\t\trunning = setTimer(flush, 0);\n\t\t\t}\n\t\t}\n\n\t\tfunction flush() {\n\t\t\trunning = null;\n\t\t\twhile(tasks.length > 0) {\n\t\t\t\ttasks.shift()(tasks.shift());\n\t\t\t}\n\t\t}\n\n\t\treturn Promise;\n\t};\n\n\tfunction throwit(e) {\n\t\tthrow e;\n\t}\n\n\tfunction noop() {}\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(require); }));\n\n","/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine('lib/makePromise',[],function() {\n\n\treturn function makePromise(environment) {\n\n\t\tvar tasks = environment.scheduler;\n\t\tvar emitRejection = initEmitRejection();\n\n\t\tvar objectCreate = Object.create ||\n\t\t\tfunction(proto) {\n\t\t\t\tfunction Child() {}\n\t\t\t\tChild.prototype = proto;\n\t\t\t\treturn new Child();\n\t\t\t};\n\n\t\t/**\n\t\t * Create a promise whose fate is determined by resolver\n\t\t * @constructor\n\t\t * @returns {Promise} promise\n\t\t * @name Promise\n\t\t */\n\t\tfunction Promise(resolver, handler) {\n\t\t\tthis._handler = resolver === Handler ? handler : init(resolver);\n\t\t}\n\n\t\t/**\n\t\t * Run the supplied resolver\n\t\t * @param resolver\n\t\t * @returns {Pending}\n\t\t */\n\t\tfunction init(resolver) {\n\t\t\tvar handler = new Pending();\n\n\t\t\ttry {\n\t\t\t\tresolver(promiseResolve, promiseReject, promiseNotify);\n\t\t\t} catch (e) {\n\t\t\t\tpromiseReject(e);\n\t\t\t}\n\n\t\t\treturn handler;\n\n\t\t\t/**\n\t\t\t * Transition from pre-resolution state to post-resolution state, notifying\n\t\t\t * all listeners of the ultimate fulfillment or rejection\n\t\t\t * @param {*} x resolution value\n\t\t\t */\n\t\t\tfunction promiseResolve (x) {\n\t\t\t\thandler.resolve(x);\n\t\t\t}\n\t\t\t/**\n\t\t\t * Reject this promise with reason, which will be used verbatim\n\t\t\t * @param {Error|*} reason rejection reason, strongly suggested\n\t\t\t *   to be an Error type\n\t\t\t */\n\t\t\tfunction promiseReject (reason) {\n\t\t\t\thandler.reject(reason);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @deprecated\n\t\t\t * Issue a progress event, notifying all progress listeners\n\t\t\t * @param {*} x progress event payload to pass to all listeners\n\t\t\t */\n\t\t\tfunction promiseNotify (x) {\n\t\t\t\thandler.notify(x);\n\t\t\t}\n\t\t}\n\n\t\t// Creation\n\n\t\tPromise.resolve = resolve;\n\t\tPromise.reject = reject;\n\t\tPromise.never = never;\n\n\t\tPromise._defer = defer;\n\t\tPromise._handler = getHandler;\n\n\t\t/**\n\t\t * Returns a trusted promise. If x is already a trusted promise, it is\n\t\t * returned, otherwise returns a new trusted Promise which follows x.\n\t\t * @param  {*} x\n\t\t * @return {Promise} promise\n\t\t */\n\t\tfunction resolve(x) {\n\t\t\treturn isPromise(x) ? x\n\t\t\t\t: new Promise(Handler, new Async(getHandler(x)));\n\t\t}\n\n\t\t/**\n\t\t * Return a reject promise with x as its reason (x is used verbatim)\n\t\t * @param {*} x\n\t\t * @returns {Promise} rejected promise\n\t\t */\n\t\tfunction reject(x) {\n\t\t\treturn new Promise(Handler, new Async(new Rejected(x)));\n\t\t}\n\n\t\t/**\n\t\t * Return a promise that remains pending forever\n\t\t * @returns {Promise} forever-pending promise.\n\t\t */\n\t\tfunction never() {\n\t\t\treturn foreverPendingPromise; // Should be frozen\n\t\t}\n\n\t\t/**\n\t\t * Creates an internal {promise, resolver} pair\n\t\t * @private\n\t\t * @returns {Promise}\n\t\t */\n\t\tfunction defer() {\n\t\t\treturn new Promise(Handler, new Pending());\n\t\t}\n\n\t\t// Transformation and flow control\n\n\t\t/**\n\t\t * Transform this promise's fulfillment value, returning a new Promise\n\t\t * for the transformed result.  If the promise cannot be fulfilled, onRejected\n\t\t * is called with the reason.  onProgress *may* be called with updates toward\n\t\t * this promise's fulfillment.\n\t\t * @param {function=} onFulfilled fulfillment handler\n\t\t * @param {function=} onRejected rejection handler\n\t\t * @param {function=} onProgress @deprecated progress handler\n\t\t * @return {Promise} new promise\n\t\t */\n\t\tPromise.prototype.then = function(onFulfilled, onRejected, onProgress) {\n\t\t\tvar parent = this._handler;\n\t\t\tvar state = parent.join().state();\n\n\t\t\tif ((typeof onFulfilled !== 'function' && state > 0) ||\n\t\t\t\t(typeof onRejected !== 'function' && state < 0)) {\n\t\t\t\t// Short circuit: value will not change, simply share handler\n\t\t\t\treturn new this.constructor(Handler, parent);\n\t\t\t}\n\n\t\t\tvar p = this._beget();\n\t\t\tvar child = p._handler;\n\n\t\t\tparent.chain(child, parent.receiver, onFulfilled, onRejected, onProgress);\n\n\t\t\treturn p;\n\t\t};\n\n\t\t/**\n\t\t * If this promise cannot be fulfilled due to an error, call onRejected to\n\t\t * handle the error. Shortcut for .then(undefined, onRejected)\n\t\t * @param {function?} onRejected\n\t\t * @return {Promise}\n\t\t */\n\t\tPromise.prototype['catch'] = function(onRejected) {\n\t\t\treturn this.then(void 0, onRejected);\n\t\t};\n\n\t\t/**\n\t\t * Creates a new, pending promise of the same type as this promise\n\t\t * @private\n\t\t * @returns {Promise}\n\t\t */\n\t\tPromise.prototype._beget = function() {\n\t\t\treturn begetFrom(this._handler, this.constructor);\n\t\t};\n\n\t\tfunction begetFrom(parent, Promise) {\n\t\t\tvar child = new Pending(parent.receiver, parent.join().context);\n\t\t\treturn new Promise(Handler, child);\n\t\t}\n\n\t\t// Array combinators\n\n\t\tPromise.all = all;\n\t\tPromise.race = race;\n\t\tPromise._traverse = traverse;\n\n\t\t/**\n\t\t * Return a promise that will fulfill when all promises in the\n\t\t * input array have fulfilled, or will reject when one of the\n\t\t * promises rejects.\n\t\t * @param {array} promises array of promises\n\t\t * @returns {Promise} promise for array of fulfillment values\n\t\t */\n\t\tfunction all(promises) {\n\t\t\treturn traverseWith(snd, null, promises);\n\t\t}\n\n\t\t/**\n\t\t * Array<Promise<X>> -> Promise<Array<f(X)>>\n\t\t * @private\n\t\t * @param {function} f function to apply to each promise's value\n\t\t * @param {Array} promises array of promises\n\t\t * @returns {Promise} promise for transformed values\n\t\t */\n\t\tfunction traverse(f, promises) {\n\t\t\treturn traverseWith(tryCatch2, f, promises);\n\t\t}\n\n\t\tfunction traverseWith(tryMap, f, promises) {\n\t\t\tvar handler = typeof f === 'function' ? mapAt : settleAt;\n\n\t\t\tvar resolver = new Pending();\n\t\t\tvar pending = promises.length >>> 0;\n\t\t\tvar results = new Array(pending);\n\n\t\t\tfor (var i = 0, x; i < promises.length && !resolver.resolved; ++i) {\n\t\t\t\tx = promises[i];\n\n\t\t\t\tif (x === void 0 && !(i in promises)) {\n\t\t\t\t\t--pending;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\ttraverseAt(promises, handler, i, x, resolver);\n\t\t\t}\n\n\t\t\tif(pending === 0) {\n\t\t\t\tresolver.become(new Fulfilled(results));\n\t\t\t}\n\n\t\t\treturn new Promise(Handler, resolver);\n\n\t\t\tfunction mapAt(i, x, resolver) {\n\t\t\t\tif(!resolver.resolved) {\n\t\t\t\t\ttraverseAt(promises, settleAt, i, tryMap(f, x, i), resolver);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction settleAt(i, x, resolver) {\n\t\t\t\tresults[i] = x;\n\t\t\t\tif(--pending === 0) {\n\t\t\t\t\tresolver.become(new Fulfilled(results));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction traverseAt(promises, handler, i, x, resolver) {\n\t\t\tif (maybeThenable(x)) {\n\t\t\t\tvar h = getHandlerMaybeThenable(x);\n\t\t\t\tvar s = h.state();\n\n\t\t\t\tif (s === 0) {\n\t\t\t\t\th.fold(handler, i, void 0, resolver);\n\t\t\t\t} else if (s > 0) {\n\t\t\t\t\thandler(i, h.value, resolver);\n\t\t\t\t} else {\n\t\t\t\t\tresolver.become(h);\n\t\t\t\t\tvisitRemaining(promises, i+1, h);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thandler(i, x, resolver);\n\t\t\t}\n\t\t}\n\n\t\tPromise._visitRemaining = visitRemaining;\n\t\tfunction visitRemaining(promises, start, handler) {\n\t\t\tfor(var i=start; i<promises.length; ++i) {\n\t\t\t\tmarkAsHandled(getHandler(promises[i]), handler);\n\t\t\t}\n\t\t}\n\n\t\tfunction markAsHandled(h, handler) {\n\t\t\tif(h === handler) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar s = h.state();\n\t\t\tif(s === 0) {\n\t\t\t\th.visit(h, void 0, h._unreport);\n\t\t\t} else if(s < 0) {\n\t\t\t\th._unreport();\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Fulfill-reject competitive race. Return a promise that will settle\n\t\t * to the same state as the earliest input promise to settle.\n\t\t *\n\t\t * WARNING: The ES6 Promise spec requires that race()ing an empty array\n\t\t * must return a promise that is pending forever.  This implementation\n\t\t * returns a singleton forever-pending promise, the same singleton that is\n\t\t * returned by Promise.never(), thus can be checked with ===\n\t\t *\n\t\t * @param {array} promises array of promises to race\n\t\t * @returns {Promise} if input is non-empty, a promise that will settle\n\t\t * to the same outcome as the earliest input promise to settle. if empty\n\t\t * is empty, returns a promise that will never settle.\n\t\t */\n\t\tfunction race(promises) {\n\t\t\tif(typeof promises !== 'object' || promises === null) {\n\t\t\t\treturn reject(new TypeError('non-iterable passed to race()'));\n\t\t\t}\n\n\t\t\t// Sigh, race([]) is untestable unless we return *something*\n\t\t\t// that is recognizable without calling .then() on it.\n\t\t\treturn promises.length === 0 ? never()\n\t\t\t\t : promises.length === 1 ? resolve(promises[0])\n\t\t\t\t : runRace(promises);\n\t\t}\n\n\t\tfunction runRace(promises) {\n\t\t\tvar resolver = new Pending();\n\t\t\tvar i, x, h;\n\t\t\tfor(i=0; i<promises.length; ++i) {\n\t\t\t\tx = promises[i];\n\t\t\t\tif (x === void 0 && !(i in promises)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\th = getHandler(x);\n\t\t\t\tif(h.state() !== 0) {\n\t\t\t\t\tresolver.become(h);\n\t\t\t\t\tvisitRemaining(promises, i+1, h);\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\th.visit(resolver, resolver.resolve, resolver.reject);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn new Promise(Handler, resolver);\n\t\t}\n\n\t\t// Promise internals\n\t\t// Below this, everything is @private\n\n\t\t/**\n\t\t * Get an appropriate handler for x, without checking for cycles\n\t\t * @param {*} x\n\t\t * @returns {object} handler\n\t\t */\n\t\tfunction getHandler(x) {\n\t\t\tif(isPromise(x)) {\n\t\t\t\treturn x._handler.join();\n\t\t\t}\n\t\t\treturn maybeThenable(x) ? getHandlerUntrusted(x) : new Fulfilled(x);\n\t\t}\n\n\t\t/**\n\t\t * Get a handler for thenable x.\n\t\t * NOTE: You must only call this if maybeThenable(x) == true\n\t\t * @param {object|function|Promise} x\n\t\t * @returns {object} handler\n\t\t */\n\t\tfunction getHandlerMaybeThenable(x) {\n\t\t\treturn isPromise(x) ? x._handler.join() : getHandlerUntrusted(x);\n\t\t}\n\n\t\t/**\n\t\t * Get a handler for potentially untrusted thenable x\n\t\t * @param {*} x\n\t\t * @returns {object} handler\n\t\t */\n\t\tfunction getHandlerUntrusted(x) {\n\t\t\ttry {\n\t\t\t\tvar untrustedThen = x.then;\n\t\t\t\treturn typeof untrustedThen === 'function'\n\t\t\t\t\t? new Thenable(untrustedThen, x)\n\t\t\t\t\t: new Fulfilled(x);\n\t\t\t} catch(e) {\n\t\t\t\treturn new Rejected(e);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Handler for a promise that is pending forever\n\t\t * @constructor\n\t\t */\n\t\tfunction Handler() {}\n\n\t\tHandler.prototype.when\n\t\t\t= Handler.prototype.become\n\t\t\t= Handler.prototype.notify // deprecated\n\t\t\t= Handler.prototype.fail\n\t\t\t= Handler.prototype._unreport\n\t\t\t= Handler.prototype._report\n\t\t\t= noop;\n\n\t\tHandler.prototype._state = 0;\n\n\t\tHandler.prototype.state = function() {\n\t\t\treturn this._state;\n\t\t};\n\n\t\t/**\n\t\t * Recursively collapse handler chain to find the handler\n\t\t * nearest to the fully resolved value.\n\t\t * @returns {object} handler nearest the fully resolved value\n\t\t */\n\t\tHandler.prototype.join = function() {\n\t\t\tvar h = this;\n\t\t\twhile(h.handler !== void 0) {\n\t\t\t\th = h.handler;\n\t\t\t}\n\t\t\treturn h;\n\t\t};\n\n\t\tHandler.prototype.chain = function(to, receiver, fulfilled, rejected, progress) {\n\t\t\tthis.when({\n\t\t\t\tresolver: to,\n\t\t\t\treceiver: receiver,\n\t\t\t\tfulfilled: fulfilled,\n\t\t\t\trejected: rejected,\n\t\t\t\tprogress: progress\n\t\t\t});\n\t\t};\n\n\t\tHandler.prototype.visit = function(receiver, fulfilled, rejected, progress) {\n\t\t\tthis.chain(failIfRejected, receiver, fulfilled, rejected, progress);\n\t\t};\n\n\t\tHandler.prototype.fold = function(f, z, c, to) {\n\t\t\tthis.when(new Fold(f, z, c, to));\n\t\t};\n\n\t\t/**\n\t\t * Handler that invokes fail() on any handler it becomes\n\t\t * @constructor\n\t\t */\n\t\tfunction FailIfRejected() {}\n\n\t\tinherit(Handler, FailIfRejected);\n\n\t\tFailIfRejected.prototype.become = function(h) {\n\t\t\th.fail();\n\t\t};\n\n\t\tvar failIfRejected = new FailIfRejected();\n\n\t\t/**\n\t\t * Handler that manages a queue of consumers waiting on a pending promise\n\t\t * @constructor\n\t\t */\n\t\tfunction Pending(receiver, inheritedContext) {\n\t\t\tPromise.createContext(this, inheritedContext);\n\n\t\t\tthis.consumers = void 0;\n\t\t\tthis.receiver = receiver;\n\t\t\tthis.handler = void 0;\n\t\t\tthis.resolved = false;\n\t\t}\n\n\t\tinherit(Handler, Pending);\n\n\t\tPending.prototype._state = 0;\n\n\t\tPending.prototype.resolve = function(x) {\n\t\t\tthis.become(getHandler(x));\n\t\t};\n\n\t\tPending.prototype.reject = function(x) {\n\t\t\tif(this.resolved) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.become(new Rejected(x));\n\t\t};\n\n\t\tPending.prototype.join = function() {\n\t\t\tif (!this.resolved) {\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tvar h = this;\n\n\t\t\twhile (h.handler !== void 0) {\n\t\t\t\th = h.handler;\n\t\t\t\tif (h === this) {\n\t\t\t\t\treturn this.handler = cycle();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn h;\n\t\t};\n\n\t\tPending.prototype.run = function() {\n\t\t\tvar q = this.consumers;\n\t\t\tvar handler = this.handler;\n\t\t\tthis.handler = this.handler.join();\n\t\t\tthis.consumers = void 0;\n\n\t\t\tfor (var i = 0; i < q.length; ++i) {\n\t\t\t\thandler.when(q[i]);\n\t\t\t}\n\t\t};\n\n\t\tPending.prototype.become = function(handler) {\n\t\t\tif(this.resolved) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.resolved = true;\n\t\t\tthis.handler = handler;\n\t\t\tif(this.consumers !== void 0) {\n\t\t\t\ttasks.enqueue(this);\n\t\t\t}\n\n\t\t\tif(this.context !== void 0) {\n\t\t\t\thandler._report(this.context);\n\t\t\t}\n\t\t};\n\n\t\tPending.prototype.when = function(continuation) {\n\t\t\tif(this.resolved) {\n\t\t\t\ttasks.enqueue(new ContinuationTask(continuation, this.handler));\n\t\t\t} else {\n\t\t\t\tif(this.consumers === void 0) {\n\t\t\t\t\tthis.consumers = [continuation];\n\t\t\t\t} else {\n\t\t\t\t\tthis.consumers.push(continuation);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * @deprecated\n\t\t */\n\t\tPending.prototype.notify = function(x) {\n\t\t\tif(!this.resolved) {\n\t\t\t\ttasks.enqueue(new ProgressTask(x, this));\n\t\t\t}\n\t\t};\n\n\t\tPending.prototype.fail = function(context) {\n\t\t\tvar c = typeof context === 'undefined' ? this.context : context;\n\t\t\tthis.resolved && this.handler.join().fail(c);\n\t\t};\n\n\t\tPending.prototype._report = function(context) {\n\t\t\tthis.resolved && this.handler.join()._report(context);\n\t\t};\n\n\t\tPending.prototype._unreport = function() {\n\t\t\tthis.resolved && this.handler.join()._unreport();\n\t\t};\n\n\t\t/**\n\t\t * Wrap another handler and force it into a future stack\n\t\t * @param {object} handler\n\t\t * @constructor\n\t\t */\n\t\tfunction Async(handler) {\n\t\t\tthis.handler = handler;\n\t\t}\n\n\t\tinherit(Handler, Async);\n\n\t\tAsync.prototype.when = function(continuation) {\n\t\t\ttasks.enqueue(new ContinuationTask(continuation, this));\n\t\t};\n\n\t\tAsync.prototype._report = function(context) {\n\t\t\tthis.join()._report(context);\n\t\t};\n\n\t\tAsync.prototype._unreport = function() {\n\t\t\tthis.join()._unreport();\n\t\t};\n\n\t\t/**\n\t\t * Handler that wraps an untrusted thenable and assimilates it in a future stack\n\t\t * @param {function} then\n\t\t * @param {{then: function}} thenable\n\t\t * @constructor\n\t\t */\n\t\tfunction Thenable(then, thenable) {\n\t\t\tPending.call(this);\n\t\t\ttasks.enqueue(new AssimilateTask(then, thenable, this));\n\t\t}\n\n\t\tinherit(Pending, Thenable);\n\n\t\t/**\n\t\t * Handler for a fulfilled promise\n\t\t * @param {*} x fulfillment value\n\t\t * @constructor\n\t\t */\n\t\tfunction Fulfilled(x) {\n\t\t\tPromise.createContext(this);\n\t\t\tthis.value = x;\n\t\t}\n\n\t\tinherit(Handler, Fulfilled);\n\n\t\tFulfilled.prototype._state = 1;\n\n\t\tFulfilled.prototype.fold = function(f, z, c, to) {\n\t\t\trunContinuation3(f, z, this, c, to);\n\t\t};\n\n\t\tFulfilled.prototype.when = function(cont) {\n\t\t\trunContinuation1(cont.fulfilled, this, cont.receiver, cont.resolver);\n\t\t};\n\n\t\tvar errorId = 0;\n\n\t\t/**\n\t\t * Handler for a rejected promise\n\t\t * @param {*} x rejection reason\n\t\t * @constructor\n\t\t */\n\t\tfunction Rejected(x) {\n\t\t\tPromise.createContext(this);\n\n\t\t\tthis.id = ++errorId;\n\t\t\tthis.value = x;\n\t\t\tthis.handled = false;\n\t\t\tthis.reported = false;\n\n\t\t\tthis._report();\n\t\t}\n\n\t\tinherit(Handler, Rejected);\n\n\t\tRejected.prototype._state = -1;\n\n\t\tRejected.prototype.fold = function(f, z, c, to) {\n\t\t\tto.become(this);\n\t\t};\n\n\t\tRejected.prototype.when = function(cont) {\n\t\t\tif(typeof cont.rejected === 'function') {\n\t\t\t\tthis._unreport();\n\t\t\t}\n\t\t\trunContinuation1(cont.rejected, this, cont.receiver, cont.resolver);\n\t\t};\n\n\t\tRejected.prototype._report = function(context) {\n\t\t\ttasks.afterQueue(new ReportTask(this, context));\n\t\t};\n\n\t\tRejected.prototype._unreport = function() {\n\t\t\tif(this.handled) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.handled = true;\n\t\t\ttasks.afterQueue(new UnreportTask(this));\n\t\t};\n\n\t\tRejected.prototype.fail = function(context) {\n\t\t\tthis.reported = true;\n\t\t\temitRejection('unhandledRejection', this);\n\t\t\tPromise.onFatalRejection(this, context === void 0 ? this.context : context);\n\t\t};\n\n\t\tfunction ReportTask(rejection, context) {\n\t\t\tthis.rejection = rejection;\n\t\t\tthis.context = context;\n\t\t}\n\n\t\tReportTask.prototype.run = function() {\n\t\t\tif(!this.rejection.handled && !this.rejection.reported) {\n\t\t\t\tthis.rejection.reported = true;\n\t\t\t\temitRejection('unhandledRejection', this.rejection) ||\n\t\t\t\t\tPromise.onPotentiallyUnhandledRejection(this.rejection, this.context);\n\t\t\t}\n\t\t};\n\n\t\tfunction UnreportTask(rejection) {\n\t\t\tthis.rejection = rejection;\n\t\t}\n\n\t\tUnreportTask.prototype.run = function() {\n\t\t\tif(this.rejection.reported) {\n\t\t\t\temitRejection('rejectionHandled', this.rejection) ||\n\t\t\t\t\tPromise.onPotentiallyUnhandledRejectionHandled(this.rejection);\n\t\t\t}\n\t\t};\n\n\t\t// Unhandled rejection hooks\n\t\t// By default, everything is a noop\n\n\t\tPromise.createContext\n\t\t\t= Promise.enterContext\n\t\t\t= Promise.exitContext\n\t\t\t= Promise.onPotentiallyUnhandledRejection\n\t\t\t= Promise.onPotentiallyUnhandledRejectionHandled\n\t\t\t= Promise.onFatalRejection\n\t\t\t= noop;\n\n\t\t// Errors and singletons\n\n\t\tvar foreverPendingHandler = new Handler();\n\t\tvar foreverPendingPromise = new Promise(Handler, foreverPendingHandler);\n\n\t\tfunction cycle() {\n\t\t\treturn new Rejected(new TypeError('Promise cycle'));\n\t\t}\n\n\t\t// Task runners\n\n\t\t/**\n\t\t * Run a single consumer\n\t\t * @constructor\n\t\t */\n\t\tfunction ContinuationTask(continuation, handler) {\n\t\t\tthis.continuation = continuation;\n\t\t\tthis.handler = handler;\n\t\t}\n\n\t\tContinuationTask.prototype.run = function() {\n\t\t\tthis.handler.join().when(this.continuation);\n\t\t};\n\n\t\t/**\n\t\t * Run a queue of progress handlers\n\t\t * @constructor\n\t\t */\n\t\tfunction ProgressTask(value, handler) {\n\t\t\tthis.handler = handler;\n\t\t\tthis.value = value;\n\t\t}\n\n\t\tProgressTask.prototype.run = function() {\n\t\t\tvar q = this.handler.consumers;\n\t\t\tif(q === void 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var c, i = 0; i < q.length; ++i) {\n\t\t\t\tc = q[i];\n\t\t\t\trunNotify(c.progress, this.value, this.handler, c.receiver, c.resolver);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Assimilate a thenable, sending it's value to resolver\n\t\t * @param {function} then\n\t\t * @param {object|function} thenable\n\t\t * @param {object} resolver\n\t\t * @constructor\n\t\t */\n\t\tfunction AssimilateTask(then, thenable, resolver) {\n\t\t\tthis._then = then;\n\t\t\tthis.thenable = thenable;\n\t\t\tthis.resolver = resolver;\n\t\t}\n\n\t\tAssimilateTask.prototype.run = function() {\n\t\t\tvar h = this.resolver;\n\t\t\ttryAssimilate(this._then, this.thenable, _resolve, _reject, _notify);\n\n\t\t\tfunction _resolve(x) { h.resolve(x); }\n\t\t\tfunction _reject(x)  { h.reject(x); }\n\t\t\tfunction _notify(x)  { h.notify(x); }\n\t\t};\n\n\t\tfunction tryAssimilate(then, thenable, resolve, reject, notify) {\n\t\t\ttry {\n\t\t\t\tthen.call(thenable, resolve, reject, notify);\n\t\t\t} catch (e) {\n\t\t\t\treject(e);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Fold a handler value with z\n\t\t * @constructor\n\t\t */\n\t\tfunction Fold(f, z, c, to) {\n\t\t\tthis.f = f; this.z = z; this.c = c; this.to = to;\n\t\t\tthis.resolver = failIfRejected;\n\t\t\tthis.receiver = this;\n\t\t}\n\n\t\tFold.prototype.fulfilled = function(x) {\n\t\t\tthis.f.call(this.c, this.z, x, this.to);\n\t\t};\n\n\t\tFold.prototype.rejected = function(x) {\n\t\t\tthis.to.reject(x);\n\t\t};\n\n\t\tFold.prototype.progress = function(x) {\n\t\t\tthis.to.notify(x);\n\t\t};\n\n\t\t// Other helpers\n\n\t\t/**\n\t\t * @param {*} x\n\t\t * @returns {boolean} true iff x is a trusted Promise\n\t\t */\n\t\tfunction isPromise(x) {\n\t\t\treturn x instanceof Promise;\n\t\t}\n\n\t\t/**\n\t\t * Test just enough to rule out primitives, in order to take faster\n\t\t * paths in some code\n\t\t * @param {*} x\n\t\t * @returns {boolean} false iff x is guaranteed *not* to be a thenable\n\t\t */\n\t\tfunction maybeThenable(x) {\n\t\t\treturn (typeof x === 'object' || typeof x === 'function') && x !== null;\n\t\t}\n\n\t\tfunction runContinuation1(f, h, receiver, next) {\n\t\t\tif(typeof f !== 'function') {\n\t\t\t\treturn next.become(h);\n\t\t\t}\n\n\t\t\tPromise.enterContext(h);\n\t\t\ttryCatchReject(f, h.value, receiver, next);\n\t\t\tPromise.exitContext();\n\t\t}\n\n\t\tfunction runContinuation3(f, x, h, receiver, next) {\n\t\t\tif(typeof f !== 'function') {\n\t\t\t\treturn next.become(h);\n\t\t\t}\n\n\t\t\tPromise.enterContext(h);\n\t\t\ttryCatchReject3(f, x, h.value, receiver, next);\n\t\t\tPromise.exitContext();\n\t\t}\n\n\t\t/**\n\t\t * @deprecated\n\t\t */\n\t\tfunction runNotify(f, x, h, receiver, next) {\n\t\t\tif(typeof f !== 'function') {\n\t\t\t\treturn next.notify(x);\n\t\t\t}\n\n\t\t\tPromise.enterContext(h);\n\t\t\ttryCatchReturn(f, x, receiver, next);\n\t\t\tPromise.exitContext();\n\t\t}\n\n\t\tfunction tryCatch2(f, a, b) {\n\t\t\ttry {\n\t\t\t\treturn f(a, b);\n\t\t\t} catch(e) {\n\t\t\t\treturn reject(e);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Return f.call(thisArg, x), or if it throws return a rejected promise for\n\t\t * the thrown exception\n\t\t */\n\t\tfunction tryCatchReject(f, x, thisArg, next) {\n\t\t\ttry {\n\t\t\t\tnext.become(getHandler(f.call(thisArg, x)));\n\t\t\t} catch(e) {\n\t\t\t\tnext.become(new Rejected(e));\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Same as above, but includes the extra argument parameter.\n\t\t */\n\t\tfunction tryCatchReject3(f, x, y, thisArg, next) {\n\t\t\ttry {\n\t\t\t\tf.call(thisArg, x, y, next);\n\t\t\t} catch(e) {\n\t\t\t\tnext.become(new Rejected(e));\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @deprecated\n\t\t * Return f.call(thisArg, x), or if it throws, *return* the exception\n\t\t */\n\t\tfunction tryCatchReturn(f, x, thisArg, next) {\n\t\t\ttry {\n\t\t\t\tnext.notify(f.call(thisArg, x));\n\t\t\t} catch(e) {\n\t\t\t\tnext.notify(e);\n\t\t\t}\n\t\t}\n\n\t\tfunction inherit(Parent, Child) {\n\t\t\tChild.prototype = objectCreate(Parent.prototype);\n\t\t\tChild.prototype.constructor = Child;\n\t\t}\n\n\t\tfunction snd(x, y) {\n\t\t\treturn y;\n\t\t}\n\n\t\tfunction noop() {}\n\n\t\tfunction initEmitRejection() {\n\t\t\t/*global process, self, CustomEvent*/\n\t\t\tif(typeof process !== 'undefined' && process !== null\n\t\t\t\t&& typeof process.emit === 'function') {\n\t\t\t\t// Returning falsy here means to call the default\n\t\t\t\t// onPotentiallyUnhandledRejection API.  This is safe even in\n\t\t\t\t// browserify since process.emit always returns falsy in browserify:\n\t\t\t\t// https://github.com/defunctzombie/node-process/blob/master/browser.js#L40-L46\n\t\t\t\treturn function(type, rejection) {\n\t\t\t\t\treturn type === 'unhandledRejection'\n\t\t\t\t\t\t? process.emit(type, rejection.value, rejection)\n\t\t\t\t\t\t: process.emit(type, rejection);\n\t\t\t\t};\n\t\t\t} else if(typeof self !== 'undefined' && typeof CustomEvent === 'function') {\n\t\t\t\treturn (function(noop, self, CustomEvent) {\n\t\t\t\t\tvar hasCustomEvent = false;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar ev = new CustomEvent('unhandledRejection');\n\t\t\t\t\t\thasCustomEvent = ev instanceof CustomEvent;\n\t\t\t\t\t} catch (e) {}\n\n\t\t\t\t\treturn !hasCustomEvent ? noop : function(type, rejection) {\n\t\t\t\t\t\tvar ev = new CustomEvent(type, {\n\t\t\t\t\t\t\tdetail: {\n\t\t\t\t\t\t\t\treason: rejection.value,\n\t\t\t\t\t\t\t\tkey: rejection\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tbubbles: false,\n\t\t\t\t\t\t\tcancelable: true\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn !self.dispatchEvent(ev);\n\t\t\t\t\t};\n\t\t\t\t}(noop, self, CustomEvent));\n\t\t\t}\n\n\t\t\treturn noop;\n\t\t}\n\n\t\treturn Promise;\n\t};\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n\n","/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine('lib/Scheduler',[],function() {\n\n\t// Credit to Twisol (https://github.com/Twisol) for suggesting\n\t// this type of extensible queue + trampoline approach for next-tick conflation.\n\n\t/**\n\t * Async task scheduler\n\t * @param {function} async function to schedule a single async function\n\t * @constructor\n\t */\n\tfunction Scheduler(async) {\n\t\tthis._async = async;\n\t\tthis._running = false;\n\n\t\tthis._queue = this;\n\t\tthis._queueLen = 0;\n\t\tthis._afterQueue = {};\n\t\tthis._afterQueueLen = 0;\n\n\t\tvar self = this;\n\t\tthis.drain = function() {\n\t\t\tself._drain();\n\t\t};\n\t}\n\n\t/**\n\t * Enqueue a task\n\t * @param {{ run:function }} task\n\t */\n\tScheduler.prototype.enqueue = function(task) {\n\t\tthis._queue[this._queueLen++] = task;\n\t\tthis.run();\n\t};\n\n\t/**\n\t * Enqueue a task to run after the main task queue\n\t * @param {{ run:function }} task\n\t */\n\tScheduler.prototype.afterQueue = function(task) {\n\t\tthis._afterQueue[this._afterQueueLen++] = task;\n\t\tthis.run();\n\t};\n\n\tScheduler.prototype.run = function() {\n\t\tif (!this._running) {\n\t\t\tthis._running = true;\n\t\t\tthis._async(this.drain);\n\t\t}\n\t};\n\n\t/**\n\t * Drain the handler queue entirely, and then the after queue\n\t */\n\tScheduler.prototype._drain = function() {\n\t\tvar i = 0;\n\t\tfor (; i < this._queueLen; ++i) {\n\t\t\tthis._queue[i].run();\n\t\t\tthis._queue[i] = void 0;\n\t\t}\n\n\t\tthis._queueLen = 0;\n\t\tthis._running = false;\n\n\t\tfor (i = 0; i < this._afterQueueLen; ++i) {\n\t\t\tthis._afterQueue[i].run();\n\t\t\tthis._afterQueue[i] = void 0;\n\t\t}\n\n\t\tthis._afterQueueLen = 0;\n\t};\n\n\treturn Scheduler;\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n\n","/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine('lib/Promise',['require','./makePromise','./Scheduler','./env'],function (require) {\n\n\tvar makePromise = require('./makePromise');\n\tvar Scheduler = require('./Scheduler');\n\tvar async = require('./env').asap;\n\n\treturn makePromise({\n\t\tscheduler: new Scheduler(async)\n\t});\n\n});\n})(typeof define === 'function' && define.amd ? define : function (factory) { module.exports = factory(require); });\n\n","/** @license MIT License (c) copyright 2010-2014 original author or authors */\n\n/**\n * Promises/A+ and when() implementation\n * when is part of the cujoJS family of libraries (http://cujojs.com/)\n * @author Brian Cavalier\n * @author John Hann\n */\n(function(define) { 'use strict';\ndefine('when',['require','./lib/decorators/timed','./lib/decorators/array','./lib/decorators/flow','./lib/decorators/fold','./lib/decorators/inspect','./lib/decorators/iterate','./lib/decorators/progress','./lib/decorators/with','./lib/decorators/unhandledRejection','./lib/TimeoutError','./lib/Promise','./lib/apply'],function (require) {\n\n\tvar timed = require('./lib/decorators/timed');\n\tvar array = require('./lib/decorators/array');\n\tvar flow = require('./lib/decorators/flow');\n\tvar fold = require('./lib/decorators/fold');\n\tvar inspect = require('./lib/decorators/inspect');\n\tvar generate = require('./lib/decorators/iterate');\n\tvar progress = require('./lib/decorators/progress');\n\tvar withThis = require('./lib/decorators/with');\n\tvar unhandledRejection = require('./lib/decorators/unhandledRejection');\n\tvar TimeoutError = require('./lib/TimeoutError');\n\n\tvar Promise = [array, flow, fold, generate, progress,\n\t\tinspect, withThis, timed, unhandledRejection]\n\t\t.reduce(function(Promise, feature) {\n\t\t\treturn feature(Promise);\n\t\t}, require('./lib/Promise'));\n\n\tvar apply = require('./lib/apply')(Promise);\n\n\t// Public API\n\n\twhen.promise     = promise;              // Create a pending promise\n\twhen.resolve     = Promise.resolve;      // Create a resolved promise\n\twhen.reject      = Promise.reject;       // Create a rejected promise\n\n\twhen.lift        = lift;                 // lift a function to return promises\n\twhen['try']      = attempt;              // call a function and return a promise\n\twhen.attempt     = attempt;              // alias for when.try\n\n\twhen.iterate     = Promise.iterate;      // DEPRECATED (use cujojs/most streams) Generate a stream of promises\n\twhen.unfold      = Promise.unfold;       // DEPRECATED (use cujojs/most streams) Generate a stream of promises\n\n\twhen.join        = join;                 // Join 2 or more promises\n\n\twhen.all         = all;                  // Resolve a list of promises\n\twhen.settle      = settle;               // Settle a list of promises\n\n\twhen.any         = lift(Promise.any);    // One-winner race\n\twhen.some        = lift(Promise.some);   // Multi-winner race\n\twhen.race        = lift(Promise.race);   // First-to-settle race\n\n\twhen.map         = map;                  // Array.map() for promises\n\twhen.filter      = filter;               // Array.filter() for promises\n\twhen.reduce      = lift(Promise.reduce);       // Array.reduce() for promises\n\twhen.reduceRight = lift(Promise.reduceRight);  // Array.reduceRight() for promises\n\n\twhen.isPromiseLike = isPromiseLike;      // Is something promise-like, aka thenable\n\n\twhen.Promise     = Promise;              // Promise constructor\n\twhen.defer       = defer;                // Create a {promise, resolve, reject} tuple\n\n\t// Error types\n\n\twhen.TimeoutError = TimeoutError;\n\n\t/**\n\t * Get a trusted promise for x, or by transforming x with onFulfilled\n\t *\n\t * @param {*} x\n\t * @param {function?} onFulfilled callback to be called when x is\n\t *   successfully fulfilled.  If promiseOrValue is an immediate value, callback\n\t *   will be invoked immediately.\n\t * @param {function?} onRejected callback to be called when x is\n\t *   rejected.\n\t * @param {function?} onProgress callback to be called when progress updates\n\t *   are issued for x. @deprecated\n\t * @returns {Promise} a new promise that will fulfill with the return\n\t *   value of callback or errback or the completion value of promiseOrValue if\n\t *   callback and/or errback is not supplied.\n\t */\n\tfunction when(x, onFulfilled, onRejected, onProgress) {\n\t\tvar p = Promise.resolve(x);\n\t\tif (arguments.length < 2) {\n\t\t\treturn p;\n\t\t}\n\n\t\treturn p.then(onFulfilled, onRejected, onProgress);\n\t}\n\n\t/**\n\t * Creates a new promise whose fate is determined by resolver.\n\t * @param {function} resolver function(resolve, reject, notify)\n\t * @returns {Promise} promise whose fate is determine by resolver\n\t */\n\tfunction promise(resolver) {\n\t\treturn new Promise(resolver);\n\t}\n\n\t/**\n\t * Lift the supplied function, creating a version of f that returns\n\t * promises, and accepts promises as arguments.\n\t * @param {function} f\n\t * @returns {Function} version of f that returns promises\n\t */\n\tfunction lift(f) {\n\t\treturn function() {\n\t\t\tfor(var i=0, l=arguments.length, a=new Array(l); i<l; ++i) {\n\t\t\t\ta[i] = arguments[i];\n\t\t\t}\n\t\t\treturn apply(f, this, a);\n\t\t};\n\t}\n\n\t/**\n\t * Call f in a future turn, with the supplied args, and return a promise\n\t * for the result.\n\t * @param {function} f\n\t * @returns {Promise}\n\t */\n\tfunction attempt(f /*, args... */) {\n\t\t/*jshint validthis:true */\n\t\tfor(var i=0, l=arguments.length-1, a=new Array(l); i<l; ++i) {\n\t\t\ta[i] = arguments[i+1];\n\t\t}\n\t\treturn apply(f, this, a);\n\t}\n\n\t/**\n\t * Creates a {promise, resolver} pair, either or both of which\n\t * may be given out safely to consumers.\n\t * @return {{promise: Promise, resolve: function, reject: function, notify: function}}\n\t */\n\tfunction defer() {\n\t\treturn new Deferred();\n\t}\n\n\tfunction Deferred() {\n\t\tvar p = Promise._defer();\n\n\t\tfunction resolve(x) { p._handler.resolve(x); }\n\t\tfunction reject(x) { p._handler.reject(x); }\n\t\tfunction notify(x) { p._handler.notify(x); }\n\n\t\tthis.promise = p;\n\t\tthis.resolve = resolve;\n\t\tthis.reject = reject;\n\t\tthis.notify = notify;\n\t\tthis.resolver = { resolve: resolve, reject: reject, notify: notify };\n\t}\n\n\t/**\n\t * Determines if x is promise-like, i.e. a thenable object\n\t * NOTE: Will return true for *any thenable object*, and isn't truly\n\t * safe, since it may attempt to access the `then` property of x (i.e.\n\t *  clever/malicious getters may do weird things)\n\t * @param {*} x anything\n\t * @returns {boolean} true if x is promise-like\n\t */\n\tfunction isPromiseLike(x) {\n\t\treturn x && typeof x.then === 'function';\n\t}\n\n\t/**\n\t * Return a promise that will resolve only once all the supplied arguments\n\t * have resolved. The resolution value of the returned promise will be an array\n\t * containing the resolution values of each of the arguments.\n\t * @param {...*} arguments may be a mix of promises and values\n\t * @returns {Promise}\n\t */\n\tfunction join(/* ...promises */) {\n\t\treturn Promise.all(arguments);\n\t}\n\n\t/**\n\t * Return a promise that will fulfill once all input promises have\n\t * fulfilled, or reject when any one input promise rejects.\n\t * @param {array|Promise} promises array (or promise for an array) of promises\n\t * @returns {Promise}\n\t */\n\tfunction all(promises) {\n\t\treturn when(promises, Promise.all);\n\t}\n\n\t/**\n\t * Return a promise that will always fulfill with an array containing\n\t * the outcome states of all input promises.  The returned promise\n\t * will only reject if `promises` itself is a rejected promise.\n\t * @param {array|Promise} promises array (or promise for an array) of promises\n\t * @returns {Promise} promise for array of settled state descriptors\n\t */\n\tfunction settle(promises) {\n\t\treturn when(promises, Promise.settle);\n\t}\n\n\t/**\n\t * Promise-aware array map function, similar to `Array.prototype.map()`,\n\t * but input array may contain promises or values.\n\t * @param {Array|Promise} promises array of anything, may contain promises and values\n\t * @param {function(x:*, index:Number):*} mapFunc map function which may\n\t *  return a promise or value\n\t * @returns {Promise} promise that will fulfill with an array of mapped values\n\t *  or reject if any input promise rejects.\n\t */\n\tfunction map(promises, mapFunc) {\n\t\treturn when(promises, function(promises) {\n\t\t\treturn Promise.map(promises, mapFunc);\n\t\t});\n\t}\n\n\t/**\n\t * Filter the provided array of promises using the provided predicate.  Input may\n\t * contain promises and values\n\t * @param {Array|Promise} promises array of promises and values\n\t * @param {function(x:*, index:Number):boolean} predicate filtering predicate.\n\t *  Must return truthy (or promise for truthy) for items to retain.\n\t * @returns {Promise} promise that will fulfill with an array containing all items\n\t *  for which predicate returned truthy.\n\t */\n\tfunction filter(promises, predicate) {\n\t\treturn when(promises, function(promises) {\n\t\t\treturn Promise.filter(promises, predicate);\n\t\t});\n\t}\n\n\treturn when;\n});\n})(typeof define === 'function' && define.amd ? define : function (factory) { module.exports = factory(require); });\n\n"]}