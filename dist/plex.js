define("plex/core/utils",[],function(){var e={url:{query:{encode:function(t){if(!e.isDefined(t))return"";var n=[];for(var r in t)t.hasOwnProperty(r)&&n.push(encodeURIComponent(r)+"="+encodeURIComponent(t[r]));return n.join("&")}},encode:function(t,n){var r=e.url.query.encode(n);return 0===r.length?t:t+"?"+r}},clone:function(t){if(null===t||"object"!=typeof t)return t;var n=t.constructor();for(var r in t)t.hasOwnProperty(r)&&(n[r]=e.clone(t[r]));return n},isDefined:function(e){return!("undefined"==typeof e||null===e)}};return e}),define("plex/core/headers",["plex/core/utils","ua-parser"],function(e,t){function n(){var e=new t,n=e.getBrowser(),r=e.getOS();return{"X-Plex-Device":r.name,"X-Plex-Device-Name":null,"X-Plex-Platform":n.name,"X-Plex-Platform-Version":n.version.substr(0,n.version.indexOf(".",3)),"X-Plex-Product":"plex.js","X-Plex-Version":"1.0.0"}}function r(){this["default"]=n(),this.current=e.clone(this["default"])}return r.prototype.get=function(t){t="undefined"!=typeof t?t:{};var n=e.clone(this.current);null===n["X-Plex-Device-Name"]&&(null!==n["X-Plex-Product"]&&null!==n["X-Plex-Platform"]?n["X-Plex-Device-Name"]=n["X-Plex-Product"]+" ("+n["X-Plex-Platform"]+")":null!==n["X-Plex-Product"]?n["X-Plex-Device-Name"]=n["X-Plex-Product"]:n["X-Plex-Device-Name"]="plex.js");for(var r in t)t.hasOwnProperty(r)&&(n[r]=t[r]);return n},r.prototype.update=function(e){for(var t in e)e.hasOwnProperty(t)&&(this.current[t]=e[t])},r.prototype.reset=function(){this.current=e.clone(this["default"])},r.prototype.setDevice=function(e,t){this.update({"X-Plex-Device":t,"X-Plex-Device-Name":e})},r.prototype.setPlatform=function(e,t){this.update({"X-Plex-Platform":e,"X-Plex-Platform-Version":t})},r.prototype.setProduct=function(e,t){this.update({"X-Plex-Product":e,"X-Plex-Version":t})},r}),define("plex/core/interface_registry",[],function(){function e(){this.interfaces={}}return e.prototype.set=function(e){var t=e.__path__;if("undefined"==typeof t||null===t)throw new Error('Interface is missing a "__path__" attribute',e);this.interfaces[t]=e,console.debug('Registered interface "%s"',t)},e.prototype.expose=function(e){for(var t in this.interfaces)this.interfaces.hasOwnProperty(t)&&(e[t]=new this.interfaces[t](e))},e}),define("plex/cloud/interfaces/registry",["plex/core/interface_registry"],function(e){return new e}),define("plex/cloud/interfaces/api/home/root",["plex/cloud/interfaces/registry"],function(e){function t(e){this.$c=e}t.prototype.$r=function(e,n,r){return r="undefined"!=typeof r?r:{},r.outputType="xml",this.$c.request(e,t.__path__+"/"+n,r)},t.prototype.users=function(){return this.$r("GET","users")},t.__path__="/api/home",e.set(t)}),define("plex/cloud/interfaces/api/home/users",["plex/cloud/interfaces/registry","plex/core/utils"],function(e,t){function n(e){this.$c=e}n.prototype.$r=function(e,t,r){return r="undefined"!=typeof r?r:{},r.outputType="xml",this.$c.request(e,n.__path__+"/"+t,r)},n.prototype["switch"]=function(e,n){if(!t.isDefined(e))throw new Error;var r={};return t.isDefined(n)&&(r.pin=n),this.$r("POST",t.url.encode(e+"/switch",r))},n.__path__="/api/home/users",e.set(n)}),define("plex/cloud/interfaces/api/invites",["plex/cloud/interfaces/registry"],function(e){function t(e){this.$c=e}t.prototype.$r=function(e,n,r){return r="undefined"!=typeof r?r:{},r.outputType="xml",this.$c.request(e,t.__path__+"/"+n,r)},t.prototype.requested=function(){return this.$r("GET","requested")},t.prototype.requests=function(){return this.$r("GET","requests")},t.__path__="/api/invites",e.set(t)}),define("plex/cloud/interfaces/api/root",["plex/cloud/interfaces/registry","plex/core/utils"],function(e,t){function n(e){this.$c=e}n.prototype.$r=function(e,t,r){return r="undefined"!=typeof r?r:{},r.outputType="xml",this.$c.request(e,n.__path__+"/"+t,r)},n.prototype.home=function(){return this.$r("GET","home")},n.prototype.resources=function(e){var n={};return t.isDefined(e)&&("boolean"==typeof e&&(e=e?1:0),n.includeHttps=e),this.$r("GET",t.url.encode("resources",n))},n.prototype.users=function(){return this.$r("GET","users")},n.__path__="/api",e.set(n)}),define("plex/cloud/interfaces/pms/main",["plex/cloud/interfaces/registry"],function(e){function t(e){this.$c=e}t.prototype.$r=function(e,n,r){return this.$c.request(e,t.__path__+"/"+n,r)},t.prototype.ip=function(){return this.$r("GET","ip")},t.__path__="/pms/:",e.set(t)}),define("plex/cloud/interfaces/pms/playlists",["plex/cloud/interfaces/registry"],function(e){function t(e){this.$c=e}t.prototype.$r=function(e,n,r){return r="undefined"!=typeof r?r:{},r.outputType="xml",this.$c.request(e,t.__path__+"/"+n,r)},t.prototype.all=function(e){return this.$r("GET",e+"/all")},t.prototype.unwatched=function(e){return this.$r("GET",e+"/unwatched")},t.prototype.deleteItem=function(e,t){return this.$r("DELETE",e+"/items/"+t)},t.__path__="/pms/playlists",e.set(t)}),define("plex/cloud/interfaces/pms/social",["plex/cloud/interfaces/registry"],function(e){function t(e){this.$c=e}t.prototype.$r=function(e,n,r){return r="undefined"!=typeof r?r:{},r.outputType="xml",this.$c.request(e,t.__path__+"/"+n,r)},t.prototype.networks=function(){return this.$r("GET","networks")},t.__path__="/pms/social",e.set(t)}),define("plex/cloud/interfaces/devices",["plex/cloud/interfaces/registry"],function(e){function t(e){this.$c=e}t.prototype.$r=function(e,n,r){return r="undefined"!=typeof r?r:{},r.outputType="xml",this.$c.request(e,t.__path__+"/"+n,r)},t.prototype["delete"]=function(e){return this.$r("DELETE",e+".xml")},t.__path__="/devices",e.set(t)}),define("plex/cloud/interfaces/main",["plex/cloud/interfaces/registry","plex/core/utils"],function(e,t){function n(e){this.$c=e}n.prototype.$r=function(e,t,r){return r="undefined"!=typeof r?r:{},r.outputType="xml",this.$c.request(e,n.__path__+"/"+t,r)},n.prototype.scrobble=function(e,n){if(!t.isDefined(e)||!t.isDefined(n))throw new Error;return this.$r("GET",t.url.encode("scrobble",{key:e,identifier:n}))},n.prototype.unscrobble=function(e,n){if(!t.isDefined(e)||!t.isDefined(n))throw new Error;return this.$r("GET",t.url.encode("unscrobble",{key:e,identifier:n}))},n.__path__="/:",e.set(n)}),define("plex/cloud/interfaces/pins",["plex/cloud/interfaces/registry"],function(e){function t(e){this.$c=e}t.prototype.$r=function(e,n,r){return r="undefined"!=typeof r?r:{},r.outputType="xml",this.$c.request(e,t.__path__+"/"+n,r)},t.prototype.get=function(e){return this.$r("GET",e+".xml")},t.__path__="/pins",e.set(t)}),define("plex/cloud/interfaces/root",["plex/cloud/interfaces/registry"],function(e){function t(e){this.$c=e}t.prototype.$r=function(e,n,r){return r="undefined"!=typeof r?r:{},r.outputType="xml",this.$c.request(e,t.__path__+"/"+n,r)},t.prototype.devices=function(){return this.$r("GET","devices.xml")},t.prototype.pins=function(){return this.$r("POST","pins.xml")},t.__path__="",e.set(t)}),define("plex/cloud/interfaces/users",["plex/cloud/interfaces/registry","plex/core/utils"],function(e,t){function n(e){this.$c=e}n.prototype.$r=function(e,t,r){return r="undefined"!=typeof r?r:{},r.outputType="xml",this.$c.request(e,n.__path__+"/"+t,r)},n.prototype.account=function(){return this.$r("GET","account")},n.prototype.login=function(e,n){if(!t.isDefined(e)||!t.isDefined(n))throw new Error;return this.$r("POST","sign_in.xml",{headers:{Authorization:"Basic "+btoa(e+":"+n)}})},n.__path__="/users",e.set(n)}),define("plex/cloud/main",["plex/core/headers","plex/cloud/interfaces/registry","httpinvoke","when","plex/cloud/interfaces/api/home/root","plex/cloud/interfaces/api/home/users","plex/cloud/interfaces/api/invites","plex/cloud/interfaces/api/root","plex/cloud/interfaces/pms/main","plex/cloud/interfaces/pms/playlists","plex/cloud/interfaces/pms/social","plex/cloud/interfaces/devices","plex/cloud/interfaces/main","plex/cloud/interfaces/pins","plex/cloud/interfaces/root","plex/cloud/interfaces/users"],function(e,t,n,r){function i(){this.baseUrl="https://plex.tv",this.headers=new e,this.token=null,t.expose(this)}return i.prototype.request=function(e,t,i){var o=this.baseUrl+"/"+t,u=r.defer();return i="undefined"!=typeof i?i:{},i.converters={"xml text":function(e){var t=new XMLSerializer;return t.serializeToString(e)},"text xml":function(e){var t=new DOMParser;return t.parseFromString(e,"text/xml")}},i.headers=this.headers.get(i.headers),null!==this.token&&(i.headers["X-Plex-Token"]=this.token),n(o,e,i).then(function(e){e.statusCode>=200&&e.statusCode<=299?u.resolve(e.body):u.reject(e.body,e.statusCode,e.headers,null,e.statusText)},function(e){u.reject(null,null,null,null,e)}),u.promise},i}),define("plex/main",["plex/cloud/main"],function(e){return{Cloud:e,cloud:new e}}),define("plex",["plex/main"],function(e){return console.log("plex initialized"),e});
//# sourceMappingURL=plex.js.map